var searchDocuments = [
		{
			"id": "/blog/2023-10-18/fixie",
			"name": "fixie",
			"text": "fixie posted on 2023 10 18 a few weeks ago i wrote little program called to help me migrate my personal website be served via statically generated pages is similar other static site generators like hugo https gohugo io or jekyll jekyllrb com you give it bunch of markdown files and produces the html with content those but has zero customization options well not very hence name en wikipedia org wiki fixed gear bicycle basics let s say that have two about md index in your current folder if run will create version processes all directory anything underneath so there file under how also processed corresponding at its core does can customize bit styling layout use this as base creating contact normal skeleton header styles footer javascript used for expected include token somewhere body inside div replaced each given process follows 1 read 2 3 replace 4 save blog entries created which really result built provisions basic web any considered entry these 2021 12 20 sites using are several goodies happen filename path date form yyyy mm dd e g example above was first line starts cool title otherwise an extra listed grouped by year most recent uses same rest except automatically list xml rss feed need manually reference want link them from add links one things next because data previous kept metadata separate do go poking around source code ll notice just ignore local server sometimes nice preview before push actual particularly tweaking default available http localhost 9001 keep mind actually host detect changes regenerate support hot reload make stop rerun regenerates getting started download executable github hectorcorrea releases command curl lo latest chmod u x once machine sure some optionally below steps sample echo hello world home page now generator no found processing were reports again should newly ls point running pointing browser might noticed reported we following special see both likewise when ran our don t recognized interested find am produce check out 17 more information why did"
		},
		{
			"id": "/blog/2023-10-17/static-generated-site",
			"name": "Static Generated Site",
			"text": "static generated site posted on 2023 10 17 earlier this month i migrated my personal at https hectorcorrea com to be hosted as a statically set of html pages github post elaborates why and how did it recently have been interested in much we can achieve the web with just basics css javascript keeping tradition trying things decided convert see well idea works practice previous version was served via small go program running linux machine digital ocean 2017 blogged about setup blog 01 18 migrating from node js am really impressed low key maintenance that approach for 6 years initial stored its content entries mysql database one point 2022 changed store markdown files render those runtime liked having plain text like could easily edit any editor navigating through all also straightforward going since already switching not big leap thought using something hugo or jekyll parse generate but code write tool do job me so s what wrote little parses generates each them given use mostly has logic specific an index list grouped by year rss feed consumed readers is called fixie available hosting initially when first create intending same serve apache however converting dawned host which cool kids are doing these days never new territory documentation fantastic didn t take long push repository directly great instructions configure dns docs en configuring custom domain your managing original url hectocorrea bit tricky because super comfortable process smooth legacy redirects time rewrite over structure urls every change tried make sure links redirected properly done relatively want lose functionality relational backend used include record id say hello world switched replaced date sequence number matched file disk 2012 09 02 00028 keep bad changing again move closer front drop now looks handling easy inject analyze handle differently ahead come up solution accounts stub example two tell browser redirect user head meta http equiv refresh 0 way if somebody goes will found send known redirection developer mozilla org us redirections disadvantage there lots extra repo e they contain no real only least guess ll live page automatically loads 404 everytime visits link does exist renders proper response status nice you customize users whatever layout uses think most out unfortunately knowing report often rendered today still few broken images download some fix next source err io includes"
		},
		{
			"id": "/blog/2022-11-12/migrating-to-mastodon",
			"name": "Migrating to Mastodon",
			"text": "migrating to mastodon posted on 2022 11 12 is an open source project with the goal of providing a platform create decentralized social networks started in 2016 as by eugen rochko who avid user since 2008 was dissatisfied state and direction twitter believing that instant global communications were too crucial for modern society belong single commercial company he sought build friendly microblogging product would not any central authority but remain practical everyday use https joinmastodon org about creating media something aligns my idea web previous two attempts at joining disappointing i had hard time finding people follow site felt like empty warehouse little offer this month massive migration www msn com en us news technology considering check out these alternatives ar aa13nzlw it looks things are starting turn around amount posting interesting stuff has grown exponentially makes me optimistic just one many projects promotes participate federated universe fediverse wikipedia wiki which users from different products can communicate each other here very short video framatube w 4294a720 f263 4ea4 9392 cf9cea4d5277 explains basic again conceptually how our evolve practice achieve we collectively tend revert back centralized proprietary solutions e g email control martin fowler elaborates rather eloquently martinfowler articles exploring html what if goes myspace let s hope online prevails interface exclusively through website find be responsive works well both desktop mobile browsers keeps track three timelines home local timeline displays posts where spend most shows instance account lives case post instances general only care am following also include boosted retweeted lingo nice thing always chronological order there no advertising so predictable decided browse see might interested want rarely really drinking fire hose never know going part uninteresting don t often did changed few defaults settings profile they minimal default theme seems dark black background switched mine light white turned slow mode refreshes new come along found jumping much does automatically refresh instead banner top tells x items click when advanced you view more than same via columns think off thank goodness seem remember tried before prefer simplicity building network read mostly glorified rss reader engage deep conversations mean large majority browsing good form blogs or references sources lot used have moved easy notice because their accounts process bit challenging everybody example hosted code4lib hachyderm io digipres club name however once somebody regardless them interact your work look usually handle somewhere after been ad hoc others those tools help migrate doing manually suspect way similar interests narrow focus giant all purpose kind far concerned toots revolve software development hectorjcorrea big fan adding hashtags important given distributed nature believe search feature searches within overall first impressions said such place now moving actively content mentioned algorithm behind scenes trying guess should promote engagement attract advertisers great benefit approach will exact spot chronologically surrounded last next looking frustrated could kept changing including located struggled earlier keep up influx sites times unavailable respond delayed show understandable give tell normal stable person organization corporation facebook ggmbh non profit germany individuals principles able another even options accomplish understand perfect tooling already better privacy code conduct independent its own means trusting individual data agreeing enforce theory model hosting set rules noted ro ubiqueros notes 97fl43rhnu highlighted chanda prescod weinstein experience ibjiyongi status 1590462702983720962 still wondering long term sarah roberts behindthescreen book points moderation problem tech solution meantime ve deactivated"
		},
		{
			"id": "/blog/2022-08-30/i-can-t-believe-it-can-sort-visualized",
			"name": "I can't believe it can sort - visualized",
			"text": "i can t believe it sort visualized posted on 2022 08 30 a few months ago came across paper titled is this the simplest and most surprising sorting algorithm ever https arxiv org abs 2110 01111 by stanley p y fung in which he presents an incredibly simple entire code just 4 lines of for 1 to n do j if then swap that s as indicates at first glance looks like cannot possible work e g comparison wrong but you try ll notice indeed correct also not efficient any stretch imagination shouldn be used example introduce students yet points out appealing thing about may its simplicity terms symmetry two loops when saw had myself make sure does since there seems no intuition behind correctness entirely obvious below implementation javascript arrays are zero based 0 tmp course works despite clear explanation couldn quite understand mechanics so decided create sample program visualize execution how each elements array shifted executes with input 10 5 99 7 initial data false 2 true 3 final numbers underscores ones were iteration one things without logic performs different phases select maximum phase insertion executed am using indexes selects number moves front see table above resulting being value our fact lowest counter intuitive next takes care rest or similar en wikipedia wiki insertions happen little sorts shifting closer until gets form want yourself html hectorcorrea com demos use behaves source available here gist github 7332762794a3370a4722fe5c3dceaf0a update september has page comments criticism www cs le ac uk people pyfung gotten interesting worth reading have made far"
		},
		{
			"id": "/blog/2021-12-13/log4shell-and-solr",
			"name": "Log4Shell and Solr",
			"text": "log4shell and solr last week the disclosure of vulnerability https www lunasec io docs blog log4j zero day took many us users by surprise when i first heard about it didn t pay much attention to since figured that problem was somebody had found how leak information into log files something is bad but has limited exposure however one my colleagues pointed out allowed for remote code execution rce indeed scary as turns library uses can be configured insert certain dynamic tokens these allows connect a server download execute am not java developer so this news me got curious see works in practice installation triggered user submitting search via our application if submits query logged correct syntax trigger expansion then they surprisingly easy do demonstrate post using 8 7 0 with default logging settings there are versions affected apache org security html cve 2021 44228 leaking logs simple way triggering behavior your local issuing command like curl http localhost 8983 demo1 select q sys home parameter url what causes case will name running under you validate looking at file cat include line following 12 13 20 53 984 info qtp1845623216 26 x o s c request webapp path params correah hits status qtime notice expanded values supported 2 manual configuration propertysubstitution knows process believe known property substitution world special token passed on mean say very pretty reason because substitutions supports host piece means through proper website controlled could force servers possible recognizes indicate done jndi prefix instead passing we did before pass invokes have example let ldap 127 1 9000 hello shown below port any machine indicates string folks fastly great explanation com digging deeper 0day exploit reaching hard connecting issue looks innocent e does look anything 21 17 49 801 22 400 able write little tiny tcp node js wrote listed tcpserver an over always returns disconnects test telnet or nc var net require createserver connection function socket show connected now new date console from toisostring remoteaddress remoteport send back disconnect r n destroy started listener listen run again terminal 13t21 34 338z ffff 55748 detected result attempting make return just crafting terms understand kind communications protocols stackoverflow questions 4365621 its basic use used dns client real fully indicated linux ncat nakedsecurity sophos explained why need know fix connections taking place showed here k vv echo l released start dlog4j2 formatmsgnolookups true setting reach receives opts screenshots shows confirm log4j2 hectorcorrea images jpg keep mind still takes hosts"
		},
		{
			"id": "/blog/2021-11-16/solr-debugquery",
			"name": "Solr debugQuery",
			"text": "solr debugquery is a parameter that we can pass to when submitting query with this will include extra information in the response useful troubleshoot variety of issues queries returned helpful diagnose how interpreting search why particular document was included or not result set some documents are ranked higher than others available admin screen https hectorcorrea com images debug jpg on url like would any other curl http localhost 8983 your core select q request an attribute about raw received parsed explanation each were scored and few pieces node looks more less rawquerystring querystring parsedquery tostring explain what does our let s say do very simple blue brand new no customizations output show something text qparser luceneqparser notice term passed but indicates searching field also using default parser now instead against has been configured solrconfig xml use fields qf edismax case same might look disjunctionmaxquery title txt 10 0 author extendeddismaxqparser although still value clearly tells us boost factor see it aka rather standard lucene helps working multi words searches i run for sky indicate following shows searched certainly wanted because did wrap terms quotes if produce one shown below which phrasequery treating named en configuration ending through transformations specific english language running provide stem e applied another includes property explaining score these calculated example 00012393 ton goes here 00002135 00011405 00008465 00011495 00022192 00009343 00010956 00011520 00009331 brevity ve omitted actual data just indicated ids 3 8011298 weight 5842 schemasimilarity freq 1 computed as ast idf tf from 6 1900153 log n 5 20 number containing 10000 total 61407435 k1 b dl avgdl occurrences within 2 saturation 75 length normalization 48 average you section pretty hard decipher important highlight wealth trying understand given way blogged details understanding scoring library brown edu create digitaltechnologies want format long line delimited string newer versions have additional structured true allows json suitable parsing according documentation apache org guide 8 9 common parameters html several options kind interested timing results all original preserved backwards compatibility equivalent explainother force them even they gives almost id 00000747 first though meets criteria be otherquery infomation therefore"
		},
		{
			"id": "/blog/2021-10-04/string-encoding-in-ruby-and-json-generate",
			"name": "String encoding in Ruby and JSON.generate()",
			"text": "string encoding in ruby and json generate last week at work we ran into an interesting issue the gist of problem is that had a was valid but threw exception when used it call to below simplified version this scenario text x81ru hash language generatorerror source sequence illegal malformed utf 8 puts ru nil notice how accepts i am able use then throws tries if print console with output which already suspicious beginning something amiss what why can pass around error digging reported makes clear itself says looking for information about post guide https tenderlovemaking com 2020 01 13 html by aaron patterson helped me get better understanding one things separate property array bytes object related s possible have strings e assigned wrong provides some helpful methods dig further its method example checks against current reports whether or not our problematic false as see default particular fact are explains incorrect were like inside more on good design reviews other handle encodings so now know store piece puzzle find out does throw my guess somehow making sure since isn t force similar identical following code encode ascii invalidbytesequenceerror x81 found original seems relies c github blob d92f09a5eea009fa28cd046e9d0eb698e3d94c5c ext generator l140 l143 make before using familiar take grain salt"
		},
		{
			"id": "/blog/2021-08-26/document-body-innerhtml-woes",
			"name": "document body innerHTML woes",
			"text": "document body innerhtml woes today i ran into an issue setting the value of that caught me by surprise have always known can set html fragment to and rendering engine browser usually does right thing renders it correctly you even pass a malformed makes pretty good guesses parses but used caused parse in way had confused for while what was worse is properly formed turns out incomplete parsed all wrong below example knows how p hello b world console log notice there no head or tag yet this test opening new window then inspect page on type line above examples post print via assigned rather than relying displays immediately after assignment important because could be different from given since before assigning mdn documentation https developer mozilla org en us docs web api element says subject removes s descendants replaces them with nodes constructed parsing string htmlstring now let see happens if use replaced span left closing did not include case smart will were something similar eventually includes proper tags ditches extra guess job argue make choice reasonable problematic dealing part table strange has perfectly valid explanation simplified version just one row two columns instead tbody real behind my problem tr td 1 colum column 2 know do discarded preserved resulted very intended needed javascript against dom big plus much bigger made harder spot resulting looks ok at first glance started would heck added missing don t put moral story sure assign as expect"
		},
		{
			"id": "/blog/2021-03-09/tiny-container",
			"name": "Tiny Container",
			"text": "tiny container a few weeks ago i read the book linux containers and virtualization kernel perspective https www apress com gp 9781484262825 by shashank mohan jain was fascinated example that he provides on how to build your own from scratch in go this blog post replicate part of code mr presents but tweaked it run its shell rather than having download separate set libraries web my version only supports functionality show isolation file system whereas original shows provide network memory examples created are available at github hectorcorrea tinycontainer is copy provided as mentioned above tinyshell program emulate commands typical like cat cd env ls hostname so we can test should point out am newbie when comes stuff calls topic way league please feel free reach if got some concepts wrong or they could use better explanation what anyway although have heard were feature exposure them had been through third party tools docker s good introduction supported itself many features configure one things points virtual machines technique virtualize complete instruction architecture e whole machine much lighter creates isolated sections within operating says based doesn t abstract hardware uses techniques isolate access paths for different resources carves logical boundary same an get root process tree subsystem according made three primitives namespaces which controls visibility allows sandbox programs running inside there types each parts ids pid mounts control groups aka cgroups used cpu disk utilization layered systems allow degree sharing files between host creating with two bulk lives defines properties little emulates interact once has you want execute these follow steps compile terminal git clone goos o tc ts started notice will since making main goal blob create however do bit tricky let see done first then re launches now new directory end indeed sandboxed l47 function takes care looks more less func xaction default action wrapper createcontainer os exit 0 launch internally therefore command must be executed after runshell launched namespace via call exec trick passing cloneflags tell syscall newns newuts below string args x cmd proc self exe stdin stdout stderr flags instruct runs var uintptr newipc newpid newnet newuser sysprocattr uidmappings gidmappings err nil fmt printf error n 1 just shortcut relaunch currently executing arguments pass detected cause settings start session relatively simple listed thing here change name tinyhost our affect not where make pivotroot switch folder considered issue l149 makes built pivot man7 org man pages man8 8 html took last users also environment variable demo outside sethostname byte something turns switched easy sounds does all utilities usr bin installation might tempted say why bash executable whatever designate work except binaries dependencies need those always track down going look ways fake because produces statically compiled no repo implements basic eval print loop en wikipedia wiki e2 80 93eval 93print repl very limited pwd enough before values reports logname xdg type tty term xterm 256color home ubuntu 20 assuming indicated beginning able following indicating launching compare saw ran readme md sh createbusybox instead variables ones fact open did likewise space cannot limiting story using other certain kind traffic back forth would really useful wanted database server cover topics busybox another glory unlike poorly approach follows his tool purpose net single binary expect find their implementation close richer experience script symlinks bb tons diff hexdump grep vi even hello txt edit text save pretty neat interested talk minimal youtube watch v gmpldbcmhui brian redbeard great learn about tar balls buildroot ideas similar wrapping up learning view interesting me thinking building next anything knowledge helps understand hosting companies power large environments hundreds fast secure"
		},
		{
			"id": "/blog/2019-11-18/my-strange-journey-to-becoming-a-ruby-developer",
			"name": "My (strange) journey to becoming a Ruby developer",
			"text": "my strange journey to becoming a ruby developer five years ago in 2014 after being c for many i took first job as transitioning from one technology stack another is not uncommon among software developers most of us have jumped tech more than once our lifetime e g dos windows desktop web single user client server but each transition different brings challenges and rewards this post want reflect on how going mac linux worked out me before taking net 10 applications were built with vb later moved build when came although had little experience or was very comfortable foundational concepts like system design object oriented programming relational databases development such few bought play spare time spent nights hello rails zombies getting acquainted the tools workflows that ecosystem use initially switch graphical interfaces working terminal biggest shock eventually embraced it blogged about initial non professional experiences 2011 https hectorcorrea com blog os x 15 2012 part ii 5 why did jump didn t rage quit anything enjoyed while still think s great language yet noticing world outside so unknown wondered what missing by staying particularly since there are idea fully understanding other way building systems appealed technical wonderful team at penn state application top hydra now samvera framework challenging because typical talking database developed small collocated instead stored its information repository platform native linked data support duraspace org fedora solr http lucene apache using large number open source components early stages required collaboration coordination project rather highly distributed nature fact point remote gems learned lot quite bit entailed people variety institutions opportunity interact them veterans which helped better understand also personal projects an github psu stewardship scholarsphere something beautiful environment your code see allow view criticize enhance would been much harder couple 2016 brown university library involved exactly sense they work done involves bul search interacting via apis vivo has structure am scary right senior can write python php smaller close access domain experts librarians makes requirements iterating process simpler believe big went corporate higher education started learning never thought end up ed if organization startup given too hard longest get used dynamic typed statically some incredibly benefits typing love tradeoffs recently go supports static safety gives cringe times declare run even program cannot both ways guess thing easy prototype ideas amazed powerful create proof kind do requires exploratory steps perfect comes tooling connect endpoint read files parse json manipulate arrays classes plain hashes without ceremony verbosity course good take stuff concept production amazes former here example full catalog books display results note no longer works changed their functionality shows convert response sort iterate over print console require make request url edu q field all fields uri simple array docs map doc title author year pub date descending b output book puts hand grok familiar technologies appreciate does you dislike magic prevalent plenty things follow similar models views controllers migrations asset pipeline routing requests activecontroller activerecord last asp mvc fair amount forms well viewstate anyone simplicity processing closer finally turning off default features verbose certain areas expose bare bones within try html tags pages opposed helpers prefer standard specific syntax mean unlike rubyguides www 2019 05 link method href rocks suspect minority javascript coffeescript decaf introduction 1 likewise possible monstrosity generated responses signalvnoise posts 3697 turbolinks guides rubyonrails maybe jquery perhaps day will titled parts just kidding dependencies mixed feelings external dependency nightmare introduces baffles adopt gem save lines keep mind where tends be compared we become starting notice expense maintenance those cautious give though adopting problem newcomer these patterns know who interpreted produce binaries copy download resolve augmented operating deploy doesn figure timing bad personally don surprises during deployment issue ran into version removed rubygem registry logger 2 8 yanked rubygems versions tricky find until tried local machine cached bombed trying talk compounded deep might depends causes problems reliance extensions common nokogiri mysql2 mostly compiler issues particular compile new gcc sass sassc 37 issuecomment 248959463 installed having hunt down compilers installing really learn ready again artifact developing deploying life surprised configurations available seeing text editors mysql postgres servers nginx passenger thin puma puzzling complex beginning mention provisioning monitoring coming window written visual studio sql iis webserver variations setup pale comparison experienced normal productive nosql flavors whatnot shell scripts perfectly matter growth tool largely influenced operates closing pleasant ve doing case curve per se academic libraries probably subject hasn ended whole proficient exploring explore indicated solrdora marcli decided pervasive land planning competent wasn either tell"
		},
		{
			"id": "/blog/2019-10-29/linux-mv-and-file-patterns",
			"name": "Linux mv and file patterns",
			"text": "linux mv and file patterns last week i ran into an interesting issue renaming a bunch of files in my machine the command was 42 jpeg jpg expecting this to rename all but instead returned usage f n v source target directory at first thought had typo reality is that not valid culprit shell bash expanding before executing understandably refuses continue illustrate let s assume there are two no on when execute original what passes something like file1 file2 notice expanded individual stayed as since nothing expand it certainly intending do few searches web showed many people having same problem here one example https unix stackexchange com questions 181141 multiple with change extension working around easy enough wrote quick script job for 96 ls 1 basename done posted about twitter got several suggestions how make better solution provided by john borwick status 1188697953768050689 particular very neat other suggested use either or mmv trying both these utilities can be installed easily mac systems using www cgarbs de blog archives 430 mass more html syntax putorius net xa things dawned me while reading post local man pages would have worked dos windows user long time ago even says under good old you could saying ren b reason because pretty simple didn t support style pathname pattern expansion glob page system has following note g filename arguments useful if re braindead such cmd exe which won wildcards behalf so explains why puzzled probably did must been 10 years different operating beware native function might give information 2 rather than program your see also 3586 numbers mean"
		},
		{
			"id": "/blog/2019-07-14/mysql-utf-8-issues",
			"name": "MySQL UTF-8 issues",
			"text": "mysql utf 8 issues a few months ago i upgraded the machine where this website runs from with ubuntu 14 to one running 19 because was coming very old version of decided create brand new virtual and move content myself rather than letting attempt migrate my stuff good idea lot has changed plus it gave me chance start clean slate however in doing migration manually missed step configure database use left instead default latin 1 resulted blogs displaying bunch strange characters for things that are not part character set example several showing â or you ll see iâ ve when saw knew right away problem encoding but wasn t sure how fix data turns out there were two steps had take first pretty straight forward prompt issued following command what current notice reported latin1 select collation swedish ci then utf8 via alter blogdb collate general query ok row affected 0 00 sec 2 update setting as did above makes uses save into records already stored on found answer https stackoverflow com 9305294 446681 shows convert existing another case ran sql script converted contentmd field binary took care issue using final words course backed up before after these just so far looks like now is handled correctly also updated server notes remind if ever setup box can configuration github repo hectorcorrea ubuntuserver"
		},
		{
			"id": "/blog/2018-09-29/goodbye-gmail",
			"name": "Goodbye Gmail",
			"text": "goodbye gmail one of the advantages owning my web domain is that i can host website and email anywhere like this allows me to switch or mail providers without having change address week moved from being hosted at be a different provider deleted google account entirely blog post elaborates on why did how went about it background for hector hectorcorrea com with many years don t remember well before have vague recollection hosting an exchange server home some point later using built in service company provided when first switched 2007 was really happy hands off approach afforded particularly impressed spam filter they overnight worry not all back then knew analyzing text order detect known were analysis provide better advertising via little ads top page ok as time became concerned much information sharing search history documents calendars so few ago started duckduckgo https default engine firefox www mozilla org browser attempt reduce identity share form browse but didn do else last year accidentally blocking people s access products docs protecting our drive users their own wake up call incident highlighted working content context data free thing knowing parsing looking words software development probably want books becoming smarter making connections storing servers made uneasy reading algorithms oppression nyupress 9781479837243 by safiya umoja noble earlier another makes clear its core perspective more giving store worth straw recent addition smart reply save buttons sudden get suggests potential quick replies could use these are contextual gives suggestions depending will suggest success got ll take look thanks check them out indication deep into going doing word matching crossed line personal comfortable webmail weeks alternatives outside things if companies dig need pay what concept right think any major outlook yahoo comes privacy saying goes you re paying become product forbes sites marketshare 2012 03 05 youre depend sounds reasonable even though never paid found good reference en wikipedia wiki comparison looked several options end between protonmail fastmail has gotten lot publicity recently because strong focus encrypted way read downside cannot your standard apps example does work application iphone instead must which supports passing encryption keys needs enough might trust won mining priced entry level plan 30 per new downloaded am thankful takeout option opened test drove days once offerings chose 50 custom domains love pricing month long term contract after updated mx records most stressful part process had than 10 wanted sure provides great instructions help receive html u f6d1409f tell whether changed configured getting sent within 15 minutes pretty painless filtering big gains gave bit curious see 2018 far area where huge improvements now fanfare life case import decided 11 afford start fresh scan 12 thousand emails although nice trip down memory lane bringing over something always go file there would surprised running hiccups only keep delete feels actually still extra everybody junk subscriptions counting since logged update january 2019 other also gone through deleting stackoverflow linked authentication tried login failed luckily set password contacts reevaluate manage calendar ended apple offers icloud able connect relatively easily phone calls texting liked app loved addresses worse remembered every person emailed just haven done puzzle figured replace yet spreadsheets write computers hardly ever accessed possible anything tail course list used completely forgotten noticing today reminded analytics site those anymore come loss mostly turned learn try features mess future log analyzer goaccess io monitor traffic subscribe groups resubscribe somehow again deal february 2020 been thought idea experiences september overall very pleased missed notch availability couple eventually stopped suspect took detection algorithm consider integration easy hoped works should clarify dark everyday"
		},
		{
			"id": "/blog/2018-09-22/installing-ruby-with-ruby-install-and-chruby",
			"name": "Installing Ruby with ruby-install and chruby",
			"text": "installing ruby with install and chruby when i started writing code on learned there were many ways to download a mac initially was comfortable the version of that comes installed os x by default or using installer available at lang org https www en downloads latest as my needs evolved needed have more than one machine work different projects use specific versions are tools manage multiple among options tried rvm io rbenv github com postmodern in end found combination best for large due their minimalist approach below instructions follow brand new switch them first via homebrew brew sh then particular example 2 3 5 you can also provides script add your bash init let change configure environment point correct locations setting path gem home variables these lines bashrc file automatically select source usr local opt share another auto cd into project do not this prefer manually issue command want s pretty much all need setup simple non intrusive rest post few notes things ve about obvious me oddities thing still confuses is it does keep list newer even though 1 now web site what shows 0 7 stable 9 4 jruby stuff notice no mention whatsoever request if know will unknown proceeding anyways users hector rubies dependencies continues installation successfully puzzling after downloading show run without arguments last gotcha ll out must indicate error get rather despite peculiarities find great tool ready since usually am something surprised don t executable per se which report nothing because actually function defined once indeed type goes here quirky reload shell be practice typically just close terminal window open force happen loaded"
		},
		{
			"id": "/blog/2017-03-15/build-your-own-software",
			"name": "Build your own software",
			"text": "build your own software this blog post is an extended version of the notes that i used for my talk titled yes it http 2017 code4lib org talks at in los angeles california on march 7th you can also watch recording presentation https youtu be euarnag cy4 t 2h57m30s s about 20 minutes long introduction like original attempt to create a discussion benefits writing our solutions as opposed adopting large open source during short tenure within libraries ve gotten impression people almost always prefer adopt over developing one by mean projects vivo www vivoweb hydra github com projecthydra islandora ca and folio name few while think wonderful idea brings great opportunities collaboration believe we have swung pendulum too far towards rather than building seems default mode these days tries counter approach purposely highlighting disadvantages well emphasizing advantages experience tend oversimplify what takes existing solution developed or another institution underestimate term maintenance ramifications am concerned stopped thinking talking needs users could should them instead focus box ourselves prematurely shifted conversation from user available products sidestepping not bash love lot respect those communities surround personally participated two years development sufia known head want us continue sharing design ideas code work do throughout will use examples variety help clarify make concrete but keep mind presented here apply any just ones mentioned discuss areas where good fit suggest everything scratch go alone before adds value judicious when how don there size fits all example capabilities developer team are different 4 5 developers some present might others ymmv premise complex why advocating write mostly because realize sounds bit intuitive saying then more hope makes sense first complexity going donald norman definition living with he says suggests things many intricate interrelated parts which complicated confusing describes state world other words terms technology relates social component recognizing something new 2009 history embodied nathan ensmenger said if consider end product finished heterogeneous system both technological components understand problem has historically been so discussed context 2015 portland her does exist vacuum becky yoose lines part lives livelihoods case library interacts around given address fronts technical insight provides although cannot remove manage better ways reduce built purpose less handle institutions notice say develop simple acknowledging second advocate treat learning process get learn way appropriate sustainability compared written someone else somebody 1985 essay programming theory peter naur view activity programmers achieve certain kind production program texts goes indicate knowledge gain transcends recorded documented 2011 barn clark revisited paper found applies enterprise architecture models domain experts librarians arrive shared understanding solved realistically resulting codified involved they learned worked out together produce become institutional educational researchers ambrose colleagues similar skip happened its got hours free fail recognize comes set assumptions nor gained larger gap becomes mike davidson interesting organizations did last quarter ship let sacrifice much helps seen languages command python shops minimal ruby language same teams without expertise java huge setback asking codebase big undertaking adding top even bigger challenge sciences concluded reductionism e whole community still seem review g diagrams classes database structures tests misconception arises see suggested previous section form customizations favor proprietary customize however significantly risk ending up fork hard merge back upgrade happens yet ignore promise next time ll careful real sure reasons alternative total control upgrades decide functionality technologies put every release incremental updates base know easier mitigate dan mckinley wrote limit amount innovation introduces once decision rewrite try particular feature test feel iterate perhaps rollback no easy experiment rapid changing field come year conservative their follow works neither penalty using older established brownie points latest tools day care meet speaking really need sometimes find web site looks ahead hire designer times architectural change needed support requirements whatever allows basis agile calls being iterative implementing features increments pace shift away into discovery patrons solr blacklight vufind showcase connect each preserve digital assets important succeed delivering piece likely tool indicated earlier highlight systems producing small utilities limited single tier either interface middle data modify cross layers programs popular among mention couple traject gem parse marc files dump regardless front display stackview jquery plug items catalog emulating virtual stack backend give json feed api endpoint fetch thing external dependencies consideration adoption whether read only simpler performs operations such crosses tiers ui via grows fast biggest aspect provide environment comradery match positive security vulnerabilities required patches relatively quickly after exploit announced patch local very responsive master branch date keeps eye usually closing increasingly wouldn cody hanson blogged ago excellent crucial fully drives critical young discipline hundreds practice concept somnambulism sleepwalking mediations would add trying means implications months was reading book described anthropology evolved 1800s today surprisingly crawford newcomb describe books were interviewed had visited faraway lands writers themselves never places stories relayed went anthropologists realized incomplete culture travel accounts improvement soon lacked interpret experiencing observed until stayed periods explain practices call doing fieldwork complete solve ability deliver hampered matter suitable share designs scope taking lose remember references bridges m w dipietro lovett c k 2010 seven research based principles smart teaching john wiley sons b revisiting modelling mouratidis h rolland eds advanced information engineering caise lecture computer science vol 6741 springer berlin heidelberg d r 2013 encountering morocco cultural bloomington indiana university press n ieee annals computing 31 1 86 88 society retrieved 14 project muse jhu edu article 263929 september opinion codyhanson html 30 choose boring mcfunley p sciencedirect 15 253 261 pages cs wisc remzi pdf cambridge mass mit conference slides"
		},
		{
			"id": "/blog/2017-01-18/migrating-my-site-from-node-js-to-go",
			"name": "Migrating my site from Node.js to Go",
			"text": "migrating my site from node js to go over the years i have written code power website hectorcorrea com in a variety of programming languages and platforms last version was application using mongodb store data before that c asp net mvc with sql server backend one things liked most about is how lightweight it compared when started learn surprised language felt while at same time being incredibly powerful so decided rewrite this compare experience implementation had first became interested after reading rob pike s post less exponentially more https commandcenter blogspot 2012 06 html which he tells story on robert griesemer ken thompson were disappointed many features going be added instead flow they create new but enough develop serious applications e g big programs maintained by teams way rails ecosystems seem thrive adding platform point you need multi gigabyte ide work or tons gems do anything useful ruby during career worked statically typed mainly as well dynamically ones mostly strikes me although feels tend fact comes superb standard library means can get without having download bunch utilities build basic beginning bit unsure will feel modern against some provide nowadays like class inheritance generics exception handling provides alternative approaches for re utilization message passing error rudimentary quite practice source structure available github under repository if are make no promises quality project matter should know deploy production rather simple file main blob launcher deal all http interactions web package ll see there handle requests type static files vs request dynamic blog pages good place start database access models example handles crud operations entries generation views viewmodels used an object each information view could possible makes sure has little logic wrote noticed similar branch tree byenodejs express url routing sessions whereas write myself just fun really packages out simplify wanted much done relying external router routes session management use driver mysql where drew line not however did statements am any relational mapper orm old hand what comprehensive functions pretty think rock solid built template engine crypto io string manipulation xml json name toolkit also very nice fmt format your test run unit tests two favorites love picky minimalist its syntax statement must curly braces even body only likewise keyword loops produces binaries such great feature compile linux binary mac copying git pull bundle update deployment script something along lines terminal env goos scp mybinary user path contrary people say actually tool dependencies bundler does npm fetch crude mechanism drawn lot criticism community personally don t care part those crazy developers thinks program 1 few 2 once dependency own rest found order maintain base long 5 10 sort forces convention providing sophisticated ok mixed feelings totally err nil pattern understand value considering errors throughout making them visible called happy particularly true writing tiny channels explicitly other advanced concurrency goroutines internally concurrent though looks synchronous perspective developer appreciate asynchronous needs still relatively tooling perhaps biggest lack repl debugger install via list steps manually working intimidating derekparker delve master documentation installation osx md another thing roots needed reference than why case concept applies been bitten ways remember pass might always neilalexander dev 2021 08 29 neil alexander constructors miss beauty forcing execution initialize created cannot objects initialized their default values empty strings zero numbers overall pleased small ldp ldpserver arguably better fit since app far complicated personal safety gives both prefer former cleaner types arguments explicit limited missed hierarchies weary heck gamma et al stated we favor composition 20 ago en wikipedia org wiki design patterns anxious would may 2017 posts describing experiences golang tamizhvendan 05 01 building grisha 04 27 simplistic"
		},
		{
			"id": "/blog/2016-11-03/bundle-grep-and-rails-applications",
			"name": "Bundle, grep, and Rails Applications",
			"text": "bundle grep and rails applications when i first started programming in ruby on one of the things that struggled most was finding where a particular piece code method class string defined this particularly difficult looking for gem not my application couple years ago mike giarlo https github com mjgiarlo showed me great tip to search through entire your dependencies by using today while working with somebody else new noticed needs get broader attention since think is incredibly helpful newcomers these days use manage provides an option list path all gems you can see running terminal paths example brand it will show something along lines users xyz 2 3 1 actioncable 5 0 actionpack actionview activejob activemodel activerecord plus million other combining output venerable linux tool base have no idea they been let s say want find definition retry job calling issue following command r review which would be like changelog md wait 10 lib active core rb enqueuing queue low priority def options result shows fact fourth file returned points directly line notice last match fair its api are very well documented simple google tends give good results however as does always do some less popular approach describe blog post am trying figure out function or depending nearly itself thing dot at end important instructs also current folder if leave only but own so much bash initialization script gist hectorcorrea fd56edea3333bec47829 bashrc sh l39 type bgrep text know there developers grosscol 494e972e1b9dc1dfac18430f4d631593 same ag silver searcher instead update 12 22 2016 ran across tenderlovemaking 02 05 puts debuggerer html aaron patterson bunch tips debug probably check too 2021 updated syntax"
		},
		{
			"id": "/blog/2015-09-17/introduction-to-ldp",
			"name": "Introduction to LDP",
			"text": "introduction to ldp linked data platform http www w3 org tr is a w3c recommendation that defines set of rules provide an architecture for read write on the web this blog post concept and how get started with what anyway if we are going talk about should start by talking you familiar already feel free skip section tim bernes lee defined in 2006 designissues linkeddata html which he articulated vision allow world wide move from being linking documents i e pages humans can navigate new model know as semantic will include both machines process his own words isn t just putting it making links so person or machine explore when have some find other related same paper suggested four simple help materialize use uris names people look up those someone looks uri useful information using standards rdf sparql they discover more things over time their available following these because were well known standard technologies exchange was easier automate compared example parsing follow uses something called resource description framework 2004 rec primer 20040210 represent way modeling three part statement consist subject predicate object indicate title book might follows book123 brief history but relational databases take at database heads https gist github com hectorcorrea c49dc287581d2856a12e quick comparison between two chapter 3 working ontologist workingontologist has great explanation why important now let s say url dbpedia abraham lincoln query wiki provider result be type class yago presidentsoftheunitedstates dbp birthplacename hodgenville kentucky u dbo birthplace glancing conclude president united states born hodgeville ky interesting comes provided populationtotal 3206 thumbnail commons wikimedia special filepath town square jpg width 300 ispartof rudimentary shows power got first able our original case also figure out where population even image notice not hosted done amazing crowd sourced community effort extract structured wikipedia allows download page statistics english version knowledge base describes 4 58 million 22 classified consistent ontology including 1 445 000 persons 735 places 478 populated 411 creative works 123 music albums 87 films 19 video games 241 organizations companies 49 educational institutions 251 species 6 diseases 2009 gave ted titled year open went worldwide talks berners showed real examples used wild large scale jazz project linkedjazz network another create visualization christina harlow she explains libraries leveraging christinaharlow kicked off movement served us only covered others consume failed short describing mechanism add update existing www2014 presentation slideshare net alehors 20140410 33367843 arnauld j le hors described before conceived there no formal definition application integration state art publishing updated dumps via entry point principles terrific foundation don go far enough many unanswered questions do seems obvious list resources exist vocabulary media types formalize performed operations based api applications means server client communicate each retrieve delete clear verbs fetch servers allowed expose ones practice less like workflow images concepts several understand diving into details everything includes sources expressed triples saw previous non pdf audio files binaries else big dedicated managing contained within containers robert sanderson purl dlib indiana edu iudl 6537033f0r indicated heart kinds basic direct indirect all themselves fact picture action next sections see few show requests urls headers payload must issued em responses body return assume hosting entries comments attachments demonstrate work execute through any program capable issuing curl en checkout implementation later samples play reading needs issue request terminal blog123 host somewhere assuming response 200 ok content text turtle link ns basiccontainer rel prefix dcterms dc terms 1999 02 syntax rdfsource container user subjects weekly posts technology stuff default returned clients formats json ld xml indicating header diagrams kind source expect am typically abbreviate per specification creating jump right fictitious creates would 201 created location abc123xyz plain returns status code recommendations indicates does specific id automatically generates one may slug been blog789 want could elements 789 random topics again successfully plus adds added managed readonly adding fetched entry1 my social sciences updates itself make aware contains last triple points newly alludes its home thing however provides common handle come custom implementations then everybody order participate inside specified remove reference namely different options automatic goes detail ldpc differ check nandana mihindukulasooriya learning gives good them written perplexed dc20d743583488168703 elaborate differences every did against refuse since possible under me happen explicit says accept anything seen deal most apis need access account provisions blogs sample authors author789 jpeg length 1020 binary here couple passing x easily back head instead report 23151 ranges bytes disposition attachment filename size nonrdfsource put clearly appropriately haven ll updating indications overwrite pass save replaced conflics etags than tries replace try handled subset author123 leave unchanged patch 2015 note ldpatch 20150728 official yet group currently favoring still decided allude candidate sparqlpatch turtlepatch fedora fedorarepository insert appropriate lot tested repository choice hydra projecthydra stack shameless plug toy implemented very compliant purely experiment rather easy install executable ldpserver releases your environment linux mac windows run submitting parting thoughts challenge design infrastructure smart job integrating think step towards providing level missing admit bit hard beginning tempted discard implement sighted approach pretty soon interact ideal situation quote brian sletten ibm developerworks library wa oslc index puts nicely builds rest structure harmonize behavior across compatible tool vendors support consistently ecosystem likely together actual largely irrelevant oriented supported ton main covering worth looking thinking interfacing wrote prepared give connect minneapolis slides downloads powerpoint pptx"
		},
		{
			"id": "/blog/2015-02-28/code4lib-2015",
			"name": "Code4Lib 2015",
			"text": "code4lib 2015 img src https hectorcorrea com images pdx mthood jpg style float right alt mount hood http org is an annual conference that brings together a mix of people work at libraries and or develop software for given i am newcomer to the library domain this was my first time attending learned lot among things found interesting single track means all 400 attendees are on same room listening sessions except pre workshops have not attended in long but liked several about approach it forces organizers be very selective will presented session also presenters focus appeal broader audience interested what say keeps everybody page throughout if you bump into somebody know sure they as did rsquo s easier start conversation because don t get us versus them kind having times more honest balanced certain topics like relation between managers developers librarians likewise makes hears some difficult social issues do chose whether want hear struggles under represented groups we most conferences last 10 years been technology oriented only other hand has schedule including technologies team dynamics so attend where learn maternity leave morning solr indexing afternoon had styles keynotes 45 minutes normal 20 lightning talks 5 nice pace day didn take notes ll try summarize favorites bikers monday linked data workshop goo gl qruiye by karen estlund tom johnson timely topic me new covered ld resource description framework rdf trying solve how map talked difference mechanism leverage importance using uris predicates objects enable across institutions appreciated broad overview real life examples provided these tools one key points your isn reusable shareable machine readable then re doing enough exercise which list terms from open vocabularies lov okfn dataset lucky paired with two others sandy umkc richard berkeley knew background needs use outside dpla api bit ly c4l15 gave introduction their fetch information repository managed install plug issue post request via browser realtime issuing requests short amount rather level expertise apis posted small code sample demo easy plain html javascript can see gist github c1419e5ea8791cab14bf running version here demos portlandia selena deckelmann speakerdeck selenamarie beginners teach kicked off great keynote welcoming starting development particular she asked put themselves shoes speak when help next answer beginner question moment consider feel spoke elephant comes complexity getting environment ready particularly newcomers think called unwritten chapter need over big hurdle writing becky yoose presentation deep implications produce final consumers than just lines part our lives livelihoods case libtech interacts everything around benefits complications source community point view well fact world hasn friendly women majority fit jason clark scott w h young done make books available without special devices read concept publisher fascinating reasons geek aspect making beautiful meaningful displays text ins second reason taking content book semantic discovered through standard web kevin www kevinclarke info slides index packer io tool create identical multiple platforms configuration he showed scripts used deploy aws digitalocean although love deployment products production skeptical environments good showcases complicated made setup process something addressed instead acknowledging problem fix sidestepping potentially worse yet another abstraction layer top wayne schneider wafschneider dynamic code4lib2015 blob master 20indexing 20code4lib 202015 pdf raw true dynamically 1 million marc records deal failures updates really cool stuff favorite thomale rawgit jthomale c4l2015 slide 100 come up search interface says simple google box behind order results weighted described analyzed different patters media e g articles vs would affect defaults provide andromeda yelton andromedayelton blog 02 16 transcript thoughtful talk titled architect wanderlust weaved variety history started 9 ago evolution place society her closing remarks sum vibe generated during spend nine inventing building systems own assumptions intentionally remove barriers space kinds backgrounds tell stories build ways transform matter decenter ourselves aren give evolve predict each there hour reserved volunteered present wide find entire wiki shameless relational heads c49dc287581d2856a12e understand database hydra stack hide its complexities trey terrel slideshare net josephschmoseph1 become better 44564801 improve developer emphasized best way least much professionally grow solo thoughts said beginning quite experience got exposure grand scheme addition understanding goals setting challenges face address presentations were recorded videos youtube user worth checking out"
		},
		{
			"id": "/blog/2015-01-09/learning-javascript-data-structures-and-algorithms",
			"name": "Learning JavaScript Data Structures and Algorithms",
			"text": "learning javascript data structures and algorithms img src https hectorcorrea com images js book thumb jpg style float left the folks at packt publishing asked me to review one of their newest books www packtpub application development by loiane groner sup 1 as a fan i am glad see on subject targeted developers publication this is rather timely given tremendous growth in popularity that has experienced over years not only language for front end web but also recently viable alternative backend via node although there are lot most them java c very little indicates 2 who said were made languages such p 37 describes some basic category typically cover including stacks queues lists trees graphs sorting searching provides clear simple implementations many would benefit from reading particularly those started software career with or other scripting haven t taken traditional computer science degree courses where taught already good beginner level 3 4 example they tend be people studying help professor classroom setting s hand gentler introduction assume better fit first time own have been writing code two decades might best judge found much easier follow than introductory 5 does great job describing mechanics concise each chapter begins short terminology needed understand presented important complexity material increases new yet she manages keep both explanations implementation accurate wrote examples so can run any modern browser no setup required reader instructions how server experience navigating through different think painless will appeal readers shy away heavy side samples easily adapted inclined do though all available online github repo datastructures basics queue starts an tour features arrays appreciate spends full come built functionality e g slice map reduce filter shift explains nuances using sort default lexicographical implemented these allowed focus themselves fifo vs lifo implement variations like priority circular relatively throughout barely 30 lines 6 7 shows below snippet partial function var items enqueue element push dequeue return print console log tostring q isempty hello world after presenting moves more complex linked sets dictionaries hashes liked smoothly reused previous chapters when implementing technique handle collisions hashtable uses linkedlist shown 237 original put key value position loselosehashcode table improved version if undefined append valuepair enjoyed consistently covers cases even discusses interesting addition list touches double likewise basis hash tree last her course ones recursive operations don always work large loads goal introduce concepts beginners stress test use makes sense 8 was implements removing give comprehensive overview traversal binary order pre post guidance kinds should explore want learn about same true nice explaining strategies adjacency matrix incident suited mentioned before takes advantage fragment graph add vertex edge notice dictionary store 170 it blob master chapter09 01 vertices adjlist addvertex v set initialize array well addedge w get common bread search depth topics easy explain describe detail along you algorithm action dedicated introduces bubble merge insertion quick odd explanation execution times depending sorted beginning presents description its felt section could connected explored note linking bit usages inserted versus fact bonus free extra titled sites files downloads 4874os chapter11 pdf which recursion fibonacci big o notation ebook 26 advertised site worth checking out criticism content excellent seem used editing going press ran into sentences dropped middle without context connection rest surprised lack several reviewers listed suspect focused accuracy technical making feel polished another area visualization provided outputs results debug nicer output page realize outputting keeps needs tweaked way unchanged overall minor criticisms indicated above summary student college fascinating topic later practitioner still find intellectually challenging 9 us never particular described seen programming techniques our skills sharp authors focusing exposed dry revisit fun references disclaimer gave access copy write did receive compensation please numbers formats facilitate location indicate appear http amazon gp product 0262033844 thomas h cormen et al 4th edition robert sedgewick dp 032157351x kevin wayne reilly published michael mcmillan 1449364934 almost exact title contents read cannot compare chapter04 02 usingqueues 11 explicitly says slower non require less shameless plug ve posted my blog draw ruby drawing 13 coffeescript"
		},
		{
			"id": "/blog/2014-12-26/practical-object-oriented-design-in-ruby",
			"name": "Practical Object-Oriented Design in Ruby",
			"text": "practical object oriented design in ruby img style float left src https hectorcorrea com images poodr jpg anyone that has done a decent amount of programming is bound hear about the book http www sup 1 by sandi metz when i started on was no exception to this and kept hearing people talk it having read fair share books over years wasn t too excited yet another subject since eventually most them start look feel alike but caved picked up copy as commonly abbreviated enjoyed quite bit blog post short review two areas found interesting particular emphasis message passing rather than class structure puts very refreshing way understanding systems think missing many additionally true its name provides approach key concepts how apply does not shy away from some difficult situations developers will encounter designing instead explains these guidance avoid common pitfalls gives great advice pick sensible strategies for mentioned previous paragraph first thing struck me took unconventional dedicating majority concept objects classes working an system although focus messaging new idea alan kay been known say at least late nineties 2 3 articles ood oop tend put more example wikipedia en org wiki opening goes like paradigm based which are data structures contain form fields often attributes code procedures methods entry elaborates little used modify get brief mention half into page under additional section other hand introduction her indicates thirds dedicated messages only chapters early she managing dependencies caused between p visible foundation 15 throughout several core through lens talking inheritance states mechanism automatic delegation defines forwarding path understood 105 therefore can be seen arrangement technique cost arranging you free 184 focusing able describe run using incorrectly one biggest problems with deep hierarchies s hard see predict effects overwriting method subclass because we changing chain our implementation us have bitten before forgetting call parent track down unexpected behaviors they hidden hierarchy again words define long search resolution depends anything above dangerous 162 discussed oo literature 4 appreciate layperson language would allow beginners intermediate relate easily chapter 6 job explaining shallow hook template pattern best out also describing alternatives including use modules or mixins composition particularly insightful contrasts terms alternative reverses benefits relationship codified stand alone result must explicitly know delegate allows structural independence explicit really good plain realistic examples recommendations each techniques e g relationships duck types behaves 188 190 art binds software coding considering separate thus binding directly appealing disagreed designed believe all well others poorly nevertheless makes clear arranged even falls trap mentioning undesigned applications 7 according own definition proper wording talks evolve time constant change what so important emphasizes goal arrive easy changes need matter purpose do later primary reduce preserving changeability act achieving perfection 16 material teach practices could their covers single responsibility principle dependency injection typing unit testing interfaces pragmatic honest showing naive implementations while acknowledging sometimes better leads harder given abstract functionality spread state fixed set rules tradeoffs decisions after refactoring piece 8 acknowledges individual abstraction might understand there place obvious behavior whole 187 should achieve encourages try come solutions both effective leave options open future guess preserves your decide make suggest doing nothing same current postpone decision 22 never perfectly end reiterates advises mindful presented practice learn break now bend purposes tension inherent means meant broken learning then designer greatest strength 241 criticism don lot criticize here am sure fully agree count small category 5 manages full advise insight however disappointed database access development popular rails framework much happens suspect topics were included keep focused laudable something liked targeted couldn help cringe acrobatics explain mocks stubs unlike java c provide formal tests fail detect actual represent become stale problem per se aware alludes says static languages interface always intentional 54 reiterated 9 convoluted features summary interested everybody else consider myself average illusory superiority comes knowledge got earlier designs work every situation convey deal information tackle terminology recommend hands takes advantage few specific statically typed benefit reading explained detail any kind regardless if update march 2015 nathan youngman titled go nathany he converts shows references edition amazon addison wesley dp 0321721330 c2 cgi alankayonmessaging big mail exchange purl stefan ram pub doc discusses camps patterns elements reusable 0201633612 gang four famous intrinsic 19 exposes details said breaks encapsulation 20 favor 272 pages compared grady booch analysis 600 bertrand meyer construction 1200 called bike gears bikegears"
		},
		{
			"id": "/blog/2014-10-07/hydra-connect-2",
			"name": "Hydra Connect 2",
			"text": "hydra connect 2 ballroom https hectorcorrea com images hydraconnect2 jpg this is my first time attending a wiki duraspace org display fall 2014 and i was very impressed with the overall experience from what understand there were about 150 attendees representing 47 different institutions event had good mix of workshops lightning talks tutorials sessions un conference working groups meetings below are notes thoughts some that attended geodata in blacklight session on project stanford to make use geographical information via name geo it allows users perform searches by selecting bounding box map once an area has been selected kind data documents can be shown particular researches narrow down list they need review without having download open them individually using overlap ratio rate search gis results bess sadler made point we should thinking how libraries going curate spatial seems changing culture around metadata still flux for development text example if type cleveland might light see related even these don t have word but points inside full app like mention maps plugin also available plot two things though solr do filtering provides concept select square geofilt filter circle more here apache spatialsearch uses leaflet javascript plug handle interactions page http leafletjs beth jack reed mentioned opengeo suite which server product caching multiple formats shape file kml json pdf jpeg other side requirements boundlessgeo solutions rdf tom johnson gave hands tutorial activetriples ruby gem work triples source code used during presentation gist github no reply fce0771254a3a25817dd walkthrough rb abstracts most syntax wraps objects so you much regard store came or will end up does not fedora just handles memory really neat believe way described along lines projection underlying graph found 4 test drive esmé cowles quick active he escowles testdrive activefedora builds top whereas activetiples into operations behave activerecord classes regular rails application later learned another piece puzzle called ldp client makes connection diagram diag fact api based loosely linked platform 1 0 architecture clearly indicated rest documentation ff restful didn mean me until heard context at find www w3 tr stack although plenty relational databases am somewhat comfortable nosql total n00b when comes curious attend andrew woods tech lead presented why option needs community talked shares sensibilities solid base developers slides attachments 63408008 f4 10 02 features particularly interesting ability large files scalability versioning durable storage s native feature inter connected repositories shared content vocabulary thrilled think idea sharing database level attractive beginning scale well over least world personally focus services update guess somebody case acting as service supporting repository sure yet food thought areas under transactions asynchronous e g access remote aws index adam wead justin coyne couple presentations topic migrating applications 3 several conceptual changes one digitalobject many datastreams properties both all items nodes subtype datastreamnode datastreamnodes addition disseminators now gone rels ext datastream significant progress updating currently alpha version sufia 8 jcoyne io fedora4 html slide 25 pointed out take advantage provided looks awead migrate versions relationships given new tools technologies librarians archivists head immerse myself domain karen estlund difficulties creating human machine readable entered humans machines she feel free create their own ontologies needed strongly encouraged people uris rather than strings predicates wide range topics discussed surprised realize discussions represent ordered lists problem pretty non already solved hand where big difficult rights distributed environment webaccesscontrol said before glad hear book reading recommended resource learn semantic web ontologist workingontologist dean allemang jim hendler"
		},
		{
			"id": "/blog/2013-11-24/connection-handling-with-node-js-and-mongodb",
			"name": "Connection handling with Node.js and MongoDB",
			"text": "connection handling with node js and mongodb one of the things that trips most newcomers to is how different process connect databases from compared other programming environments for example pseudo code below a typical database handled in db driver opendb string data find some query close do something general concept only when you need access disconnect it as soon are done accessing this makes perfect sense multi threaded because there could be hundreds concurrent threads trying unless your might run out handlers internally drivers create manage pool share limited number network connections potentially large clients however client must its order available since thread http blog mixu net 2011 02 01 understanding event loop executing javascript no request completes can should open once leave long web site running allows next use an already opened rather than having re on every using but at least real reason so fact recommended keep following quote christian amor kvalheim https groups google com d msg native msgnnug8c1o hiaqvdu1bwoj authors mongoclient app boots up reuse object across all requests means follow program loaded assume don t problems keeping maintain around fine except passing several layers application now they really shouldn know anything about if express will probably main server save value variable pass routes which turn models doable ugly disconnects issue consider what happens successfully first launches then lose connectivity hang execute commands bad would nice timeout let not longer s works i ve played parameters like connecttimeoutms sockettimeoutms github io articles html hash options level supported by url avail fortunately indicated stackoverflow post questions 18688282 timeouts issues loses tap into invalidate existing mongoconnect module written called make black box have worry mentioned just wrapper api generated still get built functionality provides without started install npm terminal installed call setup method configure typically var require localhost 27017 yourdb configured anywhere command against list documents blogmodel file exports getall function callback err or reconnect return collection toarray docs fetch our handle null beauty opening checking has been valid does time executed check values passed more documentation entire source repo hectorcorrea way supports connecting single small applications want changes multiple shoot me e mail"
		},
		{
			"id": "/blog/2013-11-23/running-a-node-js-web-site-in-production-part-2",
			"name": "Running a Node.js web site in production (part 2)",
			"text": "running a node js web site in production part 2 last year i blogged about my first experiences hosting website https hectorcorrea com blog beginners guide 49 this post detail what have learned the 12 months applications finding provider for under 100 thing that is there are still no cheap providers like other programming environments example you can easily find companies php ruby or asp net with support multiple sites using your own domain file storage included and database access but s not case although many great nodejitsu heroku azure price to get full environment host goes into 300 too expensive if business more than wanted spend pet projects while hosted which phenomenal platform as service paas 9 month was able one free mongodb via mongolab very happy it does provide e g store pictures up significantly 33 soon want do yourself really mentioned wasn t hard on by linux virtual machine felt uneasy doing because am an expert administrator wished could somebody else take care of infrastructure me however given been company all bells whistles decided look again at iaas model fact amazon provides http aws made easy plunge allows evaluate approach extended period reevaluate next big picture following diagram shows how time cloud images siteonaws jpg rest will go details see ec2 micro instance use has little memory cpu allocation enough low traffic mine after trial expires kind 180 pricing 126 commit another quite close installing tools need vm extremely packages already available install nginx git few commands unlike where listen incoming port 80 front server lot system level features daemon right security run so don worry doesn make admin per se reduces anxiety being responsible handling coming any tell unwanted comes public sleep much better night knowing battle tested rather application information www google search q proxy configure good place start argteam coding hardening avoid load below settings forward 3000 notice pass code localhost location cache valid 200 304 404 12h key uri args set header x forwarded remote addr redirect off break also some caching out box these allow content reduce number requests handle script default them long original response nice ability through just add new section config specific say 3010 complete configuration files here github blob master etc conf ve split folder typical express side data angular client entire source repo since leverage had return proper expire static assets html driven pages configured day var oneday 86400000 app viewspath maxage when request partial view serve expiration value headers ngnix recognize 24 hours be without having ask same things hit minutes were visited large users only cached directly from 5 seconds 60 ms 1000 res setheader control max age date now toutcstring send json development testing macair once ready deploy updates push changes ssh pull update smooth process would eventually develop t1 instead advantage disadvantage making network total different problem something aware jun 2015 recently installed working problems point worried limited might put over edge far external dependency let works should play idea dynamodb maybe ll days yet hesitate options particular 8gb disk dirt s3 called storing frees solution around building single page build spa experience separate noticed views rendered becomes plain api list posts needs array renders happen naturally uses mvc framework likely spas whole ui logic controllers entries small absence user interface exports function req m dburl includedrafts isauth getall err documents error cannot retrieve blogs docstojson setcache reconsidering perhaps connect architecture sure research complications come deal though devices javascript considerations engine crawl address issues summary pretty initial concerns alleviated often updating installation patches such concerned couldn happier paying 0 00 dollars suspect end lets perfectly originally posted entry ended staying setup 50 bad either disposal enjoying thought ago rebuild spin matter then shutdown old two machines pay extra cost 013 hour amount paid even cents dec switched digital ocean moment similar specs 10 1 gb ram sounds appealing love clear advantages switch harder jan 2017 rewritten described migrating 69 check"
		},
		{
			"id": "/blog/2013-01-15/introduction-to-node-js",
			"name": "Introduction to Node.js",
			"text": "introduction to node js http nodejs org is a javascript interpreter that runs in server environment and gives us the ability run code directly on i e outside of browser just like we can side other languages php python ruby c or java based engine google wrote uses for chrome author ryan dahl took this called v8 repurposed it so www ibm com developerworks opensource library os also added some features are important when running example read write from file system receive send requests open source there installers available mac windows linux installer under 8mb size you download install proper your platform here once have installed should be able terminal window as follows version v0 8 17 note all examples present blog post at github repo https hectorcorrea intro feel free them play with hello world fact means helloworld program one below console log var batman robin push superman employee name jane developer department execute by previous rather silly but serves demonstrate using typical notice how array object were declared plain constructs will use traditional syntax variable scoping types function declarations statements loops conditionals et cetera web goal show development let s simple process following return any request localhost 3000 require port serverurl createserver req res url now new date html lt p gt time end listening listen if save webserver1 could launch our point somepage see something 16 lines stand up start keep mind standalone no apache nginx iis behind scenes plus having processing comfortable 5 through 13 might look familiar even never used line create pass callback every an received executed two parameters reference was response sent client however not strange passes argument similar concept delegates msdn microsoft en ms173171 aspx blocks robertsosinski 2008 12 21 understanding procs lambdas thing passing parameter internally result executing last calls method loop waiting call which displays returns paragraph text stay until cancel ctrl full found blob master event driven non blocking o key differences between platforms model such feature embedded opening home page built runtime easily building fast scalable network applications makes lightweight efficient perfect data intensive real across distributed devices executes goes into events they come what happens puts detected fired during give chance act case came output more accurate explanation about site different threaded servers only tool another well known approach details models beyond scope mostly performed functions most programming environments pseudo shows reading implementation readfilesync sample after has been completely readfile err xxx immediately very way perform nowadays display its content because thread where blocked then execution continues contents don t block instead tell continue displayed document later few milliseconds seconds while being why thorough vs advantages disadvantages each these good posts check learn mixu net 2011 02 01 main issue amix dk 19581 video history youtube watch v sac0vqcc6uq related he chose developed minutes 15 20 need become probably biggest challenge get started work updated saw section particular disk fs 127 0 1 counter setheader type starting made did before 14 asynchronous 18 exit effectively control back sits idle either ll build webserver2 ecosystem package manager npm libraries packages idea list tools visiting npmjs than thousand writing debugging mvc frameworks database drivers unit testing minification concatenation scripts coffeescript compiler folder application lives modules subfolder store express popular sites expressjs framework sinatra asp provides lot plumbing required parse including query string forms cookies handle routing support view engines templates unlike rails does provide minimal flexible providing robust set single multi hybrid machine steps mkdir dev myapp cd bunch separate module allow sends morgan short express1 path logger app serve static files join dirname public route everything else fire 2 load assign next except whole provided discuss 6 sets outputs processes 9 middleware whatever want usually dump assets css jquery images change often custom correspond elaborate second starts coming test browse 200 31ms 11 13ms dummy inside include echo 25 creates 3 register handled own finally comes automatically existing parlance piece anything returned do much routes nice things out box traffic depending looks ask books id configure requirements aware order defined make sure put handler wildcard book params go accessing value passed field 4 verbs possible define users search typically specific simply shown first form body searchtext x results express2 several produce without ve doing common template ejs jade both views inject elements visionmedia bookview h1 b title old embed specifying symbols property inserted rendered render update bookdata writer calling viewbook express3 december 2014 closing hope flexibility happy coding"
		},
		{
			"id": "/blog/2012-12-06/running-a-node-js-web-site-in-production-a-beginners-guide",
			"name": "Running a Node.js web site in production (a beginners guide)",
			"text": "running a node js web site in production beginners guide this post i describe my experiences taking first website to it on port 80 and hosting outside local box so that s available the world wide question is where you are reading can be described as typical low traffic uses express coffeescript although have deployed many c sites windows before time host anything linux environment keep mind read blog update see also part ii of with 12 months later https hectorcorrea com 2 53 chosing provider model when third party there basically two models one called infrastructure service iaas company owns hardware but charge pretty much everything related software including operating system upgrades security server et cetera any support vps falls into category second platform paas takes care most elements e g companies provide tools push your code configuration files them they take from examples use nodejitsu http heroku www both natively research found traditional cheap for websites php python ruby out do not order need find plans those tend very lack was somewhat surprise me suspect because quite mainstream yet case chose an wanted get hands dirty all steps involved particular am using cent os machine azure windowsazure cloud provides good at reasonable prices 3 free trial period oh irony microsoft things interesting help learning process decided without putting apache or nginx front some advantages throughout intermediaries great exercise long term will probably switch like don t worry about stuff issue ran trying run mac x reserved administrators root user serverfault indicates questions 112795 how normal true below 1024 let example canonical force listen requests var require serverurl 127 0 1 console log starting createserver function req res timestamp new date request url received if error throwing throw oops end hello we save file webserver non by issuing ll eacces above say 8080 3000 then would worked ok quick way around problem via sudo since ask enter password command accepted after remember path assigned likely different account could specify full usr bin change visudo include installed application needed sure were ended up altering believe vary even among distros search should specifics noted link mentioned instead elevated permissions another option configure redirect did try though what happens crashes topic address visiting our sample exception effectively stop restart automatically crash forever tool monitors relaunches soon detects anymore developed guys open source instructions here github readme simple following terminal start l o err indicated previous its own information standard output respectively important once program runs background won lines outputs logged rather than hit couple times browser view cat successful ones threw restarted notice response re launched immediately work expected started submitted therefore responsed last tue dec 04 2012 23 28 05 gmt 0500 est 10 11 14 19 21 reboots now able thing handle restarting write init d shell script these special scripts executed beginning plenty create details beyond scope gist follows sh under etc section line call app however make likewise directory lives fully qualify lastly chkconfig indicate might depend distro page suso supki centos startup point blown blob master initd aware which turn calls complicates matters little bit large skeleton similar final thoughts goals myself familiar required complicated got learned lot made appreciate whole more professional iis behind scenes while same allowing hand light weight used had chosen been taken packages deploys their servers just something deploy voila copy backup existing rollback version button really nice features eventually move ready moving offers targeted incredibly easy reasonably priced moved amazon aws"
		},
		{
			"id": "/blog/2012-11-11/using-ssh-without-a-password",
			"name": "Using SSH without a password",
			"text": "using ssh without a password this blog post describes the steps that i used to configure my os x machine remote linux having enter every time although there are many web sites describe process in detail found most of them assume you know your way around since s really not case for me decided write from newbie point view with hope help others might be on same boat tested connecting mac air running 10 8 2 openlogic centos 6 virtual windows azure cloud suspect apply distros but have no confirming it before we dive into details let define few terms ll see throughout local or host represents represent linuxuser user name use linuxmachine somedomain com also can successfully login by issuing and typing if read prep work first thing do is make sure an directory configured proper access rights following commands terminal once logged create very important created limited hence m 0700 parameter call below makes only owner has its content don t skip step picky won cd mkdir ls la should show bunch files directories newly drwx as new already exists still change chmod instead command logout generating key now generate file issue keygen f rsa c passphrase re will two called pub under these contain private public keys respectively just convenience add comment best understanding other purpose plain text their cat e g next copy secure program scp authorized aware previous overwrite want something else say keys2 then manually append existing doubt wouldn reading working ve been warned our similar what did folder again 0600 when listed rw adding authentication agent so far generated copied need automatically credentials follow register via utility eval k reenter notice here one entered above at all good try sshing prompted order launch line bash profile code 96 seems default therefore pass open run through shown update turns out keychain tool comes take over dave dribin http www org archives 2007 11 28 leopard more information about relation final tweak everything worked fine however pretty darn long alias type much edit config favorite editor hostname username domain references learned described book cookbox amazon cookbook solutions examples cookbooks dp 0596526784 carl albing jp vosen cameron newham goes each check chapter 14 writing shell scripts"
		},
		{
			"id": "/blog/2012-09-13/using-layouts-with-ejs-in-express-3-x",
			"name": "Using layouts with EJS in Express 3.x",
			"text": "using layouts with ejs in express 3 x over the last couple of months i ve been meaning to update my sample js application https github com hectorcorrea simple blog from 2 but fact that support for was removed holding me back framework itself supported concept and both template engines jade worked nicely it functionality has now need be updated provide this themselves week found includes visionmedia allowed emulate getting is probably mother all hacks s works purposes so am documenting others might on upgrading just because lack layout file looked something like code doctype html head title link rel stylesheet href stylesheets style css body h1 header p welcome b footer an a index would look content page achieve similar behavior ended up 1 splitting two files layouttop layoutbottom updating views explicitly include top bottom following example shows contents looks whereas finally notice how requests which bit annoying since previous version implicit think small price pay keep working few final words although approach not nearly as elegant what provided liked its enough upgrade without having switch download somebody else fork or invest lot time learning build engine sure more solution can achieved by taking closer at source will leave another day post"
		},
		{
			"id": "/blog/2012-06-19/a-decaf-introduction-to-coffeescript",
			"name": "A Decaf Introduction to CoffeeScript",
			"text": "a decaf introduction to coffeescript img style float left src https hectorcorrea com images coffeescriptcup png below are the links slides and code samples that i used during my presentation gave earlier this month pdf downloads intro zip or github pretty bare since spent most of time showing feel free contact me if you have any questions as go through them can find detailed explanation binary tree sample showed on other blog post drawing in 3"
		},
		{
			"id": "/blog/2012-05-23/compiling-coffeescript-from-sublime-text-2",
			"name": "Compiling CoffeeScript from Sublime Text 2",
			"text": "compiling coffeescript from sublime text 2 a few days ago i configured editor to use three different hotkeys for and running files am new so consider somewhat of an achievement that was able pull this off with help the interwebz bit luck run file in console first hotkey runs displays its output s window is useful when want quickly small program outputs following screenshot shows https hectorcorrea com images sublimetextconsole png wire up created build system you can do via tools menu option copy code inside save it as coffeescriptrun default directory my mac path library application support packages user cmd coffee selector source usr local bin windows now on hit command b while editing automatically calls compiler current opened key also by going will be displayed at bottom screen generate javascript second re associated one easy way create another like did above but slightly tell produce disadvantage approach then have toggle between modes just too many steps something need quite often what really wanted shot had binding wording preferences bindings entering keys super j tells called next step went plugin replaced import class coffeescripttojavascript textcommand def self edit view exec c name two things notice camelcase version defined very important look value wish could remember where stole idea know somewhere message board http www sublimetext forum didn t link thing calling passing both flag compile which being edited saved coffeescriptcompile py same location we before restarted make sure loaded somefile generates corresponding js does not result though outputting lastly using previous section rather than dig see how particular feature translated equivalent wired m pass p get standard"
		},
		{
			"id": "/blog/2012-05-22/drawing-a-binary-tree-in-coffeescript",
			"name": "Drawing a Binary Tree in CoffeeScript",
			"text": "drawing a binary tree in coffeescript https hectorcorrea com images binarytreecoffee png few months ago i wrote small program to draw search trees on web page using the html 5 canvas element and was very pleased with clarity structure of resulting code this blog post elaborates how it compares previous implementations same idea that have done other languages ve written programs before c ruby wasn t sure implementation would compare against more traditional object oriented programming thanks s support for classes is pretty much as you expect binarynode class hold node data binarytree implement basic operations add walk binarytreedrawer calculate coordinates where each nodes should be drawn addition since project requires only client side don store server database pleasant not having deal context switching between mental model one uncommon real life projects but nice bonus pet like can see running version here demos coffee index full javascript source available github or properly speaking implements bst which specific cormen et al give good explanation their book introduction algorithms http www amazon second thomas dp 0262032937 are has at most two children them called left subtree right there no order enforced per se pp 1178 hand always stored way satisfy property 287 let x if y then key took bit liberty its related use both terms interchangeably please aware all references fact main used drawer functionality just stores information about namely value pointers gist 2772787 constructor null root exports window method takes care adding new updating accordingly goes through calls another function allow decide what do e g print screen shown below notice partial methods missing remove values find min max cetera require rootvalue count 1 newnode loop break else callback walkfromnode unless tostring push join walks calculates does draws rather your choosing distancex 20 distancey starts drawnode starting specified return drawleft drawright parentx parenty 0 childrencount console application file shows sample usage creates adds outputs these js demo create 100 50 200 133 250 log output v x1 y1 x2 y2 installed box run ll an similar binarytreeconsole once implemented easy hook actually passed case circles lines than outputting result snippet found gt rootnodecolor 4cc552 green lastnodecolor addfff blue nodecolor fdd017 yellow color lastvalueadded drawline drawcircle nodesize drawlabel initialize some 1000 150 75 24 8 offsetx 30 offsety startx canvaswidth 2 starty final thoughts said beginning succinct ended clear concise syntax aided defining while behind scenes prototypes resulted write test maintain posts review learning structures 58 2015 13 2011 sharp 21 2006"
		},
		{
			"id": "/blog/2012-04-20/javascript-async-programming-for-sync-heads",
			"name": "JavaScript Async Programming for Sync Heads",
			"text": "javascript async programming for sync heads as i start learning node js one of the things that have puzzled me most is having to write code run in an asynchronous fashion since uses event driven non blocking o model pretty much everything has be written asynchronously somebody like always executed synchronously paradigm takes a while get used this blog post compares how particular synchronous piece looks and feels against its counterpart my gut feeling was would longer lines more complicated than version but wanted see proof it well at least single example could provide should clarify am by no means expert on or approach showing might not optimal think decent implementation you factor newbie status kind read describe function called gettopicbyurl which retrieves information entry steps achieve are follows list topics from text file find if requested topic contents another disk create object with all data return typical pseudo look something url getalltopics findtopicbyurl readtopiccontent id title content idea execute first step we don t wait value instead let know what do when s done e perform second below callback step2 operation step3 step4 looking these two examples can easily larger address issues separately number found full blown variables declaration error handling other areas fully fleshed out following picture shows complete left side right vs https hectorcorrea com images png barely four about 10 increase nothing proud 300 samples top lead believe ve noticed once tends initially functionality been implemented variable conditional branching difference although yet shorter started less concerned end significant complexity important part story previous definitively simpler regardless experience clear easier sequential there need introduce concept callbacks said after writing little does daunting time simple rocket science either shown numbers indicating where each both versions except very 2 5 lined up defined bottom depends gettopicdetailscallback being already feel odd wish wasn case way around few observations relies deal must work doing inside normal common never strange access gettopicurl made sense re use some values datapath across multiple exit point line 78 whether reading will sequentially setup stuff picked additional effort initialized appropriate depending were any errors then just however points 61 77 bail immediately call fs readfile thought uncomfortable wonder because bringing best practices world into ways handle going go 1 pass name so knows 3 define anonymous 65 process completed techniques regular seasoned developers daily basis new casual push learn language good thing source entire project using sandbox github models blogsync only demonstration purposes maintained evolves garann really nice short book targeted front http www amazon dp 1449318835 worth take interested highly recommend trevor burnham recipes leanpub asyncjs chapter alone price conclusions make through finding usually slightly environment bit harder understand become style initial shock seems fade away starts lot figure did over years books web sites available help tools libraries developed simplify applications wondering why bother tool truth here stay main developing today jquery ajax microsoft silverlight also same true websockets aka next those calls forces helps sure track jump head brave"
		},
		{
			"id": "/blog/2012-04-09/web-development-on-the-mac-os-x-part-ii",
			"name": "Web Development on the Mac OS X (part II)",
			"text": "web development on the mac os x part ii last year i blogged about my first impressions using a for https hectorcorrea com blog ruby 15 from point of view somebody with strong windows c background this post is long overdue continuation to that bought air and half ago intention experiencing what like develop applications in non environment it has been great learning experience am amazed how much ve learned those 18 months breadth technologies tools played time hardware built software undoubtedly fantastic piece s slim lightweight powerful overall beautiful not cheap but worth every penny always lived microsoft world was hard really thought going struggle more didn t transition pretty easy me having said don find incredibly better than 7 there are few differences here nothing earth shattering some comes bundled certainly its counterpart example iphoto photo management tool standard come itunes surprisingly seems work operating system updates also seem smoother be less frequent pesky support viewing creating pdfs native even supports annotating other finder no or worse explorer browse file did surprising lack paintbrush application though as far concerned have enjoyed available had anticipated since got gotten hands sinatra rails coffeescript node js apache mysql heroku git github xcode textmate sublime bunch never used before img src images logo jpg style float left alt language decided learn popular framework fun found although call myself an expert by any means lot good books sites information get started png gained appreciation mvc truly provides models m asp net knew were frameworks complete job quite until understood things activerecord database migrations understand heard actually complex does so many pieces together addition people use different options configurations when working baffled while possible common servers host pros cons passenger mongrel webrick they fit bit overwhelming new contrast which server almost iis same goes rendering engines embedded erb haml mustache can make process confusing once you pass hello page mean indicate these knock against beginner best way him her take sinatralogo http www sinatrarb similar because only views controllers v curve sorter aware out box do binary tree drawer drawing 13 put previous uses would recommend shorter complicated however if planning doing traditional relational definitively all extra stuff will need your grows deployed production kinds very mature product during hearing interested coffeescriptlogo compiles javascript pleasant writing rewrote program written prior draw trees closely code source see demo version 3 nodejs itself lead read become plunge start too community libraries utilities coming at fast pace sure next suggesting mashable 2011 03 10 agree giles bowkett he says gilesbowkett blogspot 2012 02 went off why im rebuilding html should backbone communities changes paradigms mentioned integrated environments ide dumbfounded asked around turns several ides most comfortable text editors advanced features true everybody opposite variety auto completion color syntax ways kick remotely compared provided visual studio norm linux diversity where happens languages ended settling sublimetext 2 editor choice license conclusions beginning happy large amount experiment could machine glad able compare hand macs among developers stack being done end think both each them their own strengths weaknesses days noticed turned home over 4 probably telling sign enjoying whole update years later up taking developer 5 into strange journey becoming 82"
		},
		{
			"id": "/blog/2012-01-29/functional-asynchronicity-explained",
			"name": "Functional Asynchronicity Explained",
			"text": "functional asynchronicity explained over at the pragmatic bookshelf trevor burnham has a great post titled coffeescript intervention http pragprog com magazines 2011 05 in which he shows several code snippets that demonstrate how is typically smaller and cleaner than equivalent javascript particular i love example under section this piece of trips most new developers for var 1 3 settimeout function console log 0 when executed it will output 4 to rather 2 as people guess first time they work with although his original blog explains reason behavior would like expand little bit more on reasons why we get since believe are fundamental both understand appreciate there two previous related way s works second do picks value line finally understanding www w3schools js timing asp used execute sometime future book accelerated development amazon dp 1934356786 p 108 sums up always adds its target event queue isn t invoked until after all other run our means aka be queued loop ended not each iteration true regardless timeout ms functions immediately if had 1000 important thing recognize targets won thread stackoverflow questions 4574940 zero delay often web pages gives overview deferred execution worth look you very familiar concept now know calls happen need does determine what end easy enough however newcomers fail grasp create an inner references existing variable actually have access eventually let spell out notice passing instead creating secondly exists context key called closure found programming languages good parts douglas crockford 0596517742 38 defines ability was created case just outputs defined therefore whenever different assuming from review e ends got also showing lingers completed referenced by any fact whole definitively reading closures yeah but still wanted so probably wondering can change basically make sure locked here anonymous parameter number executing creates did before see words runs pick receives single below slightly modified version ve renamed x easier trying should clearer declaration irrelevant because brand expected makes point much simpler achieve same result doing dirty gotta simplicity syntax doubt many really unless behind scenes hope helps clarify going"
		},
		{
			"id": "/blog/2011-11-22/sliding-in-a-full-page-panel-with-css-and-jquery",
			"name": "Sliding-in a Full Page Panel with CSS and jQuery",
			"text": "sliding in a full page panel with css and jquery this blog post i show how to use slide on top of another then back the original content you can see running version code presented here https hectorcorrea com demos sample html demo starts showing some part lorem ipsum text when click new displaying bacon slides previous clicking again nothing fancy but enough functionality used example is basically composed two divs first div called maindiv includes while second gallerydiv id impsum goes style these shown below as they are just plain using fixed positioning main difference between both styles background color beige tone red notice that initially set all real state height width 100 ffd39b position left 0px right bottom overflow y scroll ff4040 basics one were taken from excellent photo wall gallery http tympanus net codrops 2010 05 14 by mary lou at ve simplified make it easier what takes forth loads we force be visible invisible start view collapsed hide next thing do wire so user clicks for very simple too bind function send z index 0 bring front hidden resize animate speed collapse does following pushes setting its zero pops something greater than our case sets an animation effect noticeable finally allows us reverse also s few lines easily web pages link self contained source grab if like"
		},
		{
			"id": "/blog/2011-09-15/future-directions-for-c-sharp-and-visual-basic",
			"name": "Future Directions for C# and Visual Basic",
			"text": "future directions for c and visual basic these are my notes from anders hejlsberg session on it s been more than 10 years since managed code was introduced back in pdc 2000 every new release of has had one or two major themes version 1 2 generics 3 linq 4 dynamic features language parity the next 5 support winrt windows 8 asynchronous programming is becoming norm modern connected applications about 15 api supports operations sounds like a small percent but this probably most used stuff there different models net uses asyncoperation t task javascript promises all objects representing ongoing callbacks turn your inside out big challenge they have figured how to automatically handle so that feel just good old synchronous general pattern public async somemethodasync before firing operation await execute after completed use operator cooperatively yield control you can whenall run multiple tasks parallel turns method don start threads i need do reading threading only when cpu intensive loop perform math calculations showed some which he consumed within couldn as bridge through iasynchoperation didn quite get why obviously proponent static languages took several jabs at nature funniest line said sometimes lucky always another feature coming what called caller info attributes built add parameters receive name file path number member callerfilepath callerlinenumber membername very nice logging roslyn project towards end talked 6 0 named basics reimagine compilers compiler service open make its information available others formatters highlighters refactoring dsl with syntax tree produced by becomes other tools peek true semantic knowledge does shows interactive prompt able create program fly each went nothing people ruby huge really impress clean following picture blurry an example did declares square function string executes via delegate wicked https hectorcorrea com images buildwin2 jpg using we paste vb vice versa original preserved ctp already being rewritten"
		},
		{
			"id": "/blog/2011-09-13/8-traits-of-great-metro-style-apps",
			"name": "8 Traits of Great Metro Style Apps",
			"text": "8 traits of great metro style apps these are my notes from jensen harris http blogs msdn com b jensenh about aspx session at build windows conference on tuesday september 13th 2011 is the director program management for microsoft user experience team design there no yet opportunity sidebars system top and bottom app win32 vs content before chrome re imagined fast fluid touch faster than gui command line first approach beautiful crap most controls support animation has its own language don t mimic mouse semantic zoom not only does change but also meaning e g show categories rather details separate interfaces a screen without broken in few years snap scale beautifully form factor minimal 1024x768 widescreen 1366x768 view required portrait optional use right contracts binds together share search picker with other mail social network each implements select picture file or web sample profile facebook having to do intermediate step saving hard drive invest tile icons yesterday s way representing should be an extension you can create tiles your favorite photos album weather sce feel connected alive activity live we have folders groups put stuff down one level it name them people love make notifications displayed small period time after that update roam cloud every gets per storage settings state amount via id applications preserve as they go require explicit save cities last game played principles sessions check out 207 211 391 395 396 405 406"
		},
		{
			"id": "/blog/2011-08-28/simple-branching-strategies-for-team-foundation-server",
			"name": "Simple Branching Strategies for Team Foundation Server",
			"text": "simple branching strategies for team foundation server in this blog post i describe some that ve found useful when using traditional source control systems like tfs has very good and merging capabilities can help teams manage code a environment however despite the fact provides excellent usually recommend approach to since process of easily get convoluted out even with best tools basic idea way is have one main branch all on going development project where developers do their work daily basis once reaches point will be released production then second release created copy pushed stays active most continue working as they add new features future version system few make changes fix bugs must ironed before goes or after it been promoted following picture shows an example these concepts how branches are used over time https hectorcorrea com images png previous we see worked from week 1 through 4 green bars at end decided had needed 0 during next two weeks made perhaps fixed show stopper promoting meanwhile rest continued long term 2 blue 5 12 there were hot fixes 9 11 nice thing about concept gives us total isolation exact what s updating safe easy ready promote major was branched again cycle repeated while 3 done now purple variations small variation pattern which totally every deployed could create rather than sticking existing advantage if need still qa original life saver worth consideration first read book software configuration management patterns effective teamwork practical integration http www amazon dp 0201741172 by stephen p berczuk brad appleton you want more details chapter mainline line 17 talks dark side regardless neat your strategy might real issues didn t indicate 6 merged back same true applied also somebody go perform nothing inherent makes merge easier depending nature messy implement workflow conflicting minimized inevitably find jennifer donnelly yuiblog 2011 06 09 video f2esummit2011 advise subject valuable should happen frequently within context other words person who change soon possible prevents becoming disaster closing ideas described neither nor only options them centralized allow gain e without having dedicated staff charge although suspect apply client am not sure well fit distributed git"
		},
		{
			"id": "/blog/2011-08-27/running-visual-studio-inside-mac-os-x",
			"name": "Running Visual Studio inside Mac OS X",
			"text": "running visual studio inside mac os x lookie here i am microsoft web developer express on my macair img src https hectorcorrea com images osxwin7 png alt windows 7 lion width 80 when bought last year blog ruby development the 15 to start learning and rails wasn t sure how much was going really use it overtime ve gotten familiar with little by has become main machine at home do pretty everything including programming managing music pictures documents browsing s point that only reason power up laptop is need update one of personal asp net projects or research some c topic in particular a nice small lenovo 3000 v200 about 4 5 years old very but compared feels like clunker there isn anything wrong per se just an as time went started pondering run so don have rely two machines are many options host virtual built boot camp software comes vmware virtualbox case decided http www org create where can install 2010 screenshot beginning this post shows hosted over other virtualization for reasons free hard beat also because multi platform which allowed me plenty disk space once ready transfer vm although configured emulate drive 20 gb itself uses 12 installed perfect solid state begin being able different big plus now work all same regardless whether want program not quite sell yet though we ll see if changes future"
		},
		{
			"id": "/blog/2011-06-06/finder-error-36-on-a-nas",
			"name": "Finder Error -36 on a NAS",
			"text": "finder error 36 on a nas ever since i got my macair late last year https hectorcorrea com blog ruby development the mac os x 15 ve been having issues copying files from to external storage device is buffalo hd celu2 drivestation that can be accessed as standard usb drive or network attached using this windows computers for couple of years with no problems but refused work smoothly it was able read couldn t write when tried copy dreaded and cryptic there are several people reporting similar their macs took me months before found solution worked below an example will throw file samplepdf pdf fce7 images png clues one things noticed in dealing issue connected directly s port rather than accessing through used lead believe problem somehow related way itself if formatted incompatible would have same matter how here description computer cannot get infamous although defeated purpose first place wanted connect wireless at home drag darn thing around house also not exclusive terminal shown following screenshot by switch command notice failed second succeeded http developer apple library documentation darwin reference manpages man1 cp 1 html prevents extended attributes resource forks macwindows under tip another take smb config fix sharing edit nsmb conf streams www snowleopard filesharing 012510e you basically need configuration tell use connecting particular add two lines etc default does exist your machine didn mine create editing creating bit tricky elevated permissions link has detailed steps do aforementioned turn off ntfs man5 5 via turns out connects uses protocol called reason see somename somepath learned page access other devices just like ftp configures client comes vs samba what 011011e even simpler article web site v10 6 about named mounted servers 50 alerts may appear support kb ht4017 where want touch volumes sharednas name shared includes great explanation heck means any side effects almost weeks turned solutions post now both only effect seen so far creates every these double visible indicates store leveraged avoid appledouble data fork legacy makes sense being created we 2 non operating system screenshots show folder displayed explorer jpg nuance big deal specially given many"
		},
		{
			"id": "/blog/2011-04-11/drawing-a-binary-tree-in-ruby",
			"name": "Drawing a Binary Tree in Ruby",
			"text": "drawing a binary tree in ruby img src https hectorcorrea com images binarytree simple png alt git align left when i started learning last year decided to implement search and some of its basic operations insert delete walk just get my feet wet on the language trees are good exercise because you need use several features like conditional statements loops classes while at same time solving an interesting problem algorithm for is well documented most introductory books algorithms web make things bit more challenging also implemented program draw so that people can see how looks it has than handful nodes this particular case wrote small application draws using new canvas element supported html 5 download entire source code demo site from github repo play with your local environment blog post gives short overview main methods or properly speaking implements bst which specific version cormen et al give explanation their book introduction http www amazon second thomas dp 0262032937 each node two children one them called subtree other right but there no order enforced per se pp 1178 hand always stored way as satisfy property 287 let x be if y then key took liberty related both terms interchangeably please aware all references fact implementing procedures data structures e g algolist net wikipedia en org wiki they fairly easy class used follows gist 911769 require 40 add 30 100 20 35 25 34 puts s out box we numbers strings any native type types long comparable def adding shown below first evaluates already have root don t create value done scan aforementioned smaller values go equal greater until reach leaf once ve reached update point 909230 nil total 1 return end current true break else walking advantages very retrieve process example following 50 200 150 will us easily recursive function however method although elegant not efficient expected large number does recursion instead uses array stack keep track visits found works even thousands 911788 ignore false p processing ignoring moving next yield length 0 popping pop got experience beauty simplicity touted blocks line previous finds yields caller allows completely independent action want perform print console block statement ll sophisticated review kind decoupling between iteration elements execute programming languages via delegates pointers was amazed do pretty much variation exception calculate coordinates where needs placed traverse calculating turned challenge final solution basics follow indicated call coordinate should drawn count many side negative offset positive recurse subtrees snippet shows 911977 parent distance procedure reverse 911978 three presented here only actually appropriate parameters actual operation these routines calling displaying 911989 binarytreedrawer 75 125 175 drawer proc px py 60 plenty research best lots graph visualization graphs 0133016153 by tollis seems reference papers presentations cite pages 43 45 provide plus advanced different scenarios perhaps future enhancements suggested remove calls implementation real page could graphic since write diveintohtml5 surface series javascript lines circles simplified generate labels connecting 912001 circle centerx offsety label 7 notice merely creates arrays later inserted user renders browser run either random own laptop up 10 000 disadvantages area leads wide drawings effect 500 downloads tree500 dramatic generated too were would 115 foot tall basketball court 94 tree5000 almost 4mb size might crash trying display why am making hyperlink mac ok safari firefox problems coffeescript 3"
		},
		{
			"id": "/blog/2011-02-21/git-basics",
			"name": "Git Basics",
			"text": "git basics img src https hectorcorrea com images png alt align left this blog post is a beginners guide written by beginner on how to perform basic version control operations with including initializing repository adding files it and using branches the goal of describe use in your local machine for future i ll cover github collaboration other developers everything that show done through s command line via mac os x terminal steps should be very similar operating systems but have not tested them outside installed my we can issue following commands from find out if what which tells us our path return something like usr bin returns nothing means probably figure are screenshot shows got gitversion you pre compiled installer http help installation install computer creating once pretty simple let start brand new test folder asking its status mkdir testgit cd previous call will along lines or any parent directories ok since haven t told anything about put under terms create simply init several hidden folders inside uses these keep track changes now see reports rather than an error did before issued results running two gitinit notice branch called master has been created there commit at point officially do monitored saving text file named file1 txt into again time report below one add gitonefiletoadd reporting exist added words yet go ahead as suggested then check committed gitonefileadded know needs tracked content hasn need another order actually committing existing m first result getting gitonefilecommitted more much up likewise make already e g don special able just edit when ready example second gitonefilecommitted2 note microsoft visual source safe vss team foundation system tfs users term concept checking however checkout refers process switching totally different meaning mind view history few review changed each change took place who made log www kernel org pub software scm docs html gives list commits performed current affected particular whatchanged were specific also blame ve love lot options used entire could best get information web site displays sample after gitlog important aforementioned tools their although comprehensive exactly easy navigate they plain comes graphic user interface invoke tool issuing gitk format easier opinion still rudimentary compared perhaps better might worth researching 1 2 was 3 biggest advantages code allows projects things without having worry messing good working sandboxes play sandbox until happy merge back discard altogether end being tutorial gittutorial page says cheap so way try want exact copy both listed asterisk next currently gitbranch switch forward localized say regular original gitbranchchanges assume bring contents gitmerge automatically update updated news delete deleted some additional arguments configure merged detects automatic ask verify manual take look documentation details summary seen started went reviewing separate merging mentioned beginning explore collaborate others work remote repositories gitgub references plenty reviewed entry advanced topics selected found useful great learned posted official ton"
		},
		{
			"id": "/blog/2011-01-24/ruby-development-on-the-mac-os-x",
			"name": "Ruby Development on the Mac OS X",
			"text": "ruby development on the mac os x img width 320px height 240px align left src https hectorcorrea com images macair jpg alt a little more than month ago i got myself even though ve own computers since mid 80s this is first time that buy machintosh reason bough rather pc because wanted to start experimenting with web tools exist for non windows environments although been software developer 15 years all my experience microsoft and thought about other half of world using most people would probably thing want writing applications iphone or but in reality experiment will write an app two just see what it s like real motivation not say am abandoning ecosystem else out there are plenty successful sites e g google facebook developed those programming language decided learn along popular framework rails over following months be posting experiences developing from perspective somebody very familiar comfortable why 180px when new wasn t too thrilled perl php phyton don really know learning any languages didn excite me despite fact they ones used some including http www lang org gave different vibe seem passionate excited both them quite build which interested addition lot ideas asp net mvc main platform these days were taken made think definitively gained his presentation 10 things every java programmer should onestepback articles 10things index html jim weirich has great quote doesn affect way you worth knowing alan perlis so does offer how learned stop worrying love bomb introduced site dynamic open source focus simplicity productivity elegant syntax natural read easy digging deeper found object oriented provides garbage collection borrows interesting features functional something meaning look into indeed clean however also few particular interpreted statically typed strongly after code c many had hard imaging background slides by programmers softwaresummit 2006 speakers bowlerrubyforjavaprogrammers pdf mike bowler presentations packed information makes highlight its strengths topics cover include nature factories mock objects trivial reflection level compared can do nil means never get null pointer closures block address biggest concern namely bob martin he mentions safety provided static as important your covered unit tests test catch type errors sure agree statement 100 certainly point find at doc whyruby one nice box comes runtime libraries several feature playing without having worry much where binaries compile case came 1 8 7 version rubyversion png beginning beginningrubybook book have novice professional amazon peter cooper dp 1430223634 resource program going job covering everything make installed machine install basic class advanced exception handling database access specific techniques implement enumerators yield operator mix ins blocks frameworks sinatra highly recommend anyone starting interpreter built editors debuggers ide control visual studio was shocked no standard operating system able gather developers editing their variety text provide color completion indentation debugger isn concept intellisense either crank up pretty fast download free tool called xcode apple technologies full blown supports integration powerful textmate macromates seems favorite keyboard shortcuts running subversion git goodies editor far end buying license next update indicated follow post blog part ii 5 ended sublime 2 textwrangler barebones products somehow workflow good cannot beat price here screenshot use edit common among nix users vim emacs yet feel stone age once curve might steep shocks gotten still miss argument if testable properly structured small methods classes single responsibility need less critical true dumbfounded lack hope ted neward prediction 2011 blogs tedneward 01 tech predictions edition aspx starts feeling pressure deliver mired 90 metaphor clarify allows step through nothing old article systems reviewed smashingmagazine 2008 09 18 top smashing magazine idea available mentioned only experimented pleased operations check due installation process incredible painless pleasantly surprised well documented help github started kernel pub scm docs gittutorial did notice light weight traditional team foundation sourcesafe bit depend command line same amazed simple becomes push cloud keep copy outside summary spare sudden looking making changes checking local remote repositories nearly proficient fun ride ll blogging eventually later strange journey becoming 82 doing professionally"
		},
		{
			"id": "/blog/2010-11-29/returning-http-404-in-asp-net-mvc",
			"name": "Returning HTTP 404 in ASP.NET MVC",
			"text": "returning http 404 in asp net mvc a few weeks ago i noticed that when users of my site request blog topic does not exist although was displaying user friendly message indicating the proper status code to indicate page found this approach is typically problem if visiting human don t really care about codes but it important web crawler like googlebot or yahoo slurp because for these non very as means something concrete them digging deeper into issue realized doing what known soft which good crawlers fools thinking there valid an invalid url case 200 ok rather than fact so common both and sites talk here www google com support webmasters bin answer py 181708 help l us search webcrawler indexing 12 html root causing controller looked similar public class blogcontroller actionresult sample1 string topicname bool istopicfound somelogic var route new routevaluedictionary error action notfound return redirecttorouteresult regular display displays nice via am using browser gets 302 followed by wanted below trace with fiddler notice how original got response at then turn second indeed returned plus https hectorcorrea images jpg throwing httpexception decided update handle correctly first thought throw from example along lines sample2 false can either be handled s onexception method on application global asax whatever we use need sure rely previous otherwise ll back trap all customerrors section config could redirect default they see however just actually makes sense giving parameter where configured clearly named defaultredirect address trying solve way turns you directly change still view want simple shown following forced selected sample3 httpcontext statuscode tryskipiiscustomerrors true prevents standard iis showing clear viewresult viewname accomplishes goals sees show returns without line 7 required hint our own now somebody tries access get correct try hitting link existing looking october 2012 entire different base information post accurate though couple gotchas while slightly any other exception decorate your controllers handleerror attribute configure will rendered exceptions httpexceptions stackoverflow questions 812235 handling 812344 has more gotcha ran smaller 513 bytes chrome render its been documented before perso hirlimann ludo archives 2008 09 404s only happens most likely won production views are larger 512 time content considered should keep mind testing might off"
		},
		{
			"id": "/blog/2010-11-08/log4net-thread-safe-but-not-process-safe",
			"name": "Log4net Thread-Safe but not Process-Safe",
			"text": "log4net thread safe but not process a few days ago i was struggling with problem http logging apache org index html in web application have used many applications before little or no this case even single user hitting the site seeing strange behaviors my some of log entries were being logged others question is c asp net mvc running under iis am using true and tried rollingfileappender it couldn t been more typical use yet weird things here are symptoms that issue happening when only on one our development servers local box since able to rule out possibility might enough rights write folder configured for applicable if wouldn nothing would be at all addition sure due heavy utilization sort race condition which typically handles nicely anyway fact server 6 machine 7 made me suspect different versions culprit wasn about turning internal diagnostic begin troubleshooting turned s option see itself reporting problems give hint you familiar feature check how do enable debugging section faq release dump its information file called logdiag txt after times went what lo behold noticed there three files generated following picture shows looked https hectorcorrea com images log4netdiag jpg opened errors indicated however other two ones prefixed guid had error terminal unable acquire lock dev sandboxmvc app data logfile cannot access because by another openfile call failed houston we ok so indeed clearly telling having writing good least going crazy come now happens answer way where turns particular known as garden means will launch multiple worker processes handle requests from configuration setup configure can 4 0 pool maximum iisworkerprocesses than e spun serve your did then attempt locking issues arise once realized finding solution quite easy also explained why saw smart name each differently remember them didn experience same discuss work around let clarify wrong per se actually class discussion beyond scope blog post lesson learned need take into account configuring address ways minimal sdk appender fileappender lockingmodel duration operation reduces chances collide they keep locked minimum guarantee load additionally performance penalty opening closing entry too high worth testing decide below an example notice setting line 2 code logfileappender type minimallock param value appendtofile datepattern yyyy mm dd rollingstyle composite maxsizerollbackups 5 maximumfilesize 100kb staticlogfilename layout patternlayout conversionpattern logentry date 5level logger message newline second care make writes own collisions ll simultaneous active exclusive these shared across method guaranteed allows fast disadvantage look rather consolidated create has patternstring inclusion pattern processid unique id util reason update nov 2012 months reader alerted scenario described disable overlapped recycle set false default noted restarts brief period time w3wp serving gardens disabled cases large number outstanding may longer manifest symptom greg askew screenshot disableoverlappedrecycle png thought lot people get confused documentation says reality takes stackoverflow questions 1294668 1294842 4098409 safety 4102027 makes run tests prove 1519211 multithread 1520449 dec 2014 apparently found deadlock prone jira browse 431 thanks john zabroski heads up does mean fault such thing ability concurrently text relational databases repository summary environment must ensure uses"
		},
		{
			"id": "/blog/2010-10-29/encrypt-and-decrypt-a-string-in-c-sharp",
			"name": "Encrypt and Decrypt a string in C#",
			"text": "encrypt and decrypt a string in c this blog posts presents an easy to use class strings net although the system security cryptography http msdn microsoft com en us library aspx namespace framework provides wealth of classes values it seems that falls short providing good simple example on how these for most common request presented allows you with following lines code encryptionpassword supersecret texttoencrypt quick brown fox jumps over lazy dog encrypted crypto original disclaimer post is just one many ways if need incredible confidential information like nuke launch codes should check specific books having said probably arrived because are search encryption s case then below all 60 including curly braces can copy paste your project voilà ready bit curious remainder explains works based book 3 0 nutshell by joseph albahari pages 630 632 from stackoverflow somebody called brett questions 202011 2791259 static public private readonly byte salt encoding ascii getbytes ent3r own lt v lu h r3 var algorithm getalgorithm encryptedbytes using icryptotransform encryptor createencryptor key iv bytestoencrypt utf8 inmemorycrypt return convert tobase64string encryptedtext descryptedbytes decryptor createdecryptor frombase64string getstring performs memory transformation array data transform memorystream new stream cryptostream cryptostreammode write length toarray defines rijndaelmanaged sets its initialization vector received create rfc2898derivebytes declare we going rijndael ve got int bytesforkey keysize 8 bytesforiv blocksize has four methods crypt ones calls other two used internally process encrypting requires few steps not evident first comers involves setting up will be pushing through our since want don t provide overloads out box ll take extra account method takes care let review detail thing do define what more later ability either or obviously second bytes value important step as work already know encoded unicode csharpindepth articles general such they hold characters pretty much any language world some than stored therefore number get line 15 might larger only deal give thought translate single character represented 65 however multiple japanese 12453 maps three 227 130 166 so now have defined along corresponding converted pass finally perform talk about details section but say encrypts gives back end result see long there lot exactly i would call self no wonder commonly asked message boards declares keys supports several algorithms each them different strengths weaknesses particular wikipedia org wiki advanced standard find web purpose uses pair known set both calculated look at generator pseudo random instance needed notice required depending technically could skip manually make sure enough fill problem was too 10 expects 32 generate even streams very large blocks text while consuming little nice feature entire documents without load document chunk drawback must go when small hides read dump resulting into another password 1encryptionpassword1 receive alone hand level does kept secret useless exact same which why declared member rather parameter feel free update configurable implementation final words reverse won elaborate things consider choosing way meaning cannot hashing perfect storing database allow decryption within symmetrical whereas others asymmetrical keep mind deciding application references indicated top taken excellent www amazon desktop reference oreilly dp 0596527578 ben summary options 627 638"
		},
		{
			"id": "/blog/2010-09-27/ajax-calls-with-jquery-in-asp-net-mvc",
			"name": "AJAX calls with jQuery in ASP.NET MVC",
			"text": "ajax calls with jquery in asp net mvc one of the nice things about is ability to easily integrate standard web libraries like applications this blog post i am going show how execute from an application first example shows do it http get call and second uses both examples use json return type probably simplest on but should be ok general concept page when user clicks click here hyperlink a request made server retrieve time display part that executed without making full reload as can seen screenshot below notice was originally loaded does not change after clicked retrieved again terribly exciting good enough for our purposes sample 1 https hectorcorrea com images ajaxsample1screen jpg view makes possible rather simple s composed following elements script tag head include library block declare code html render you just need add looks id head1 runat title src url content scripts 4 js text javascript also very we are only displaying some coming line 2 rendering let invoke placeholder value returned by there no design ll describe reason next paragraphs see hijax section h2 p at system datetime now tostring href getservertime ajaxlink current div currentservertimediv course interesting actual wires anchor document ready function setup event preventdefault getcurrentservertime make getjson null updateservertime result update var message servertime has three main sections name called customary sure dom been fully constructed even if all resources e g have downloaded read more api case replacing own will link executes passing arguments executing upon completion controller hit later third finishes its execution returns object property construct defined sent through perform operation merely calculating shown ajaxsample public actionresult viewmodel new models ajaxsampleviewmodel isajaxrequest jsonrequestbehavior allowget fallback supported browser client results why able resulting ajaxsample1json might wondering clause explicitly precaution support or disabled although almost always enabled most desktop laptop computers mobile devices wired than directly could wouldn t worked instead which therefore fired already getcurrentserver maps method approach known domscripting 41 way provide progressive enhancement your pages using information textboxes mail comment asynchronous ajaxsample2screen previous form named savecommentform two textbox controls submit button newcomment where added wire rendered described before beginform savecomment formmethod address emailaddress br enter textarea input save powers similar used response action datatype data serialize success commentsaved thank pre comments technique aforementioned redirect issuing original location would requesting delivered us notation completes want fire picture values passed runtime parameters points ajaxsample2ajax process essence indicate something then back plan httppost string actually go savedat relatively straightforward within views controllers references took idea book www amazon jeffrey palermo dp 1933988622 et al 195 214 addition online documentation joe brinkman developers wrox wileycda wroxtitle productcd 0470478454 great place beginners best spend 7 bucks other buying latte croissant local coffee shop steve sanderson pro framework experts voice 1430228865 explanation 517 559 worth checking out"
		},
		{
			"id": "/blog/2010-05-17/password-recovery-in-an-asp-net-mvc-project",
			"name": "Password Recovery in an ASP.NET MVC Project",
			"text": "password recovery in an asp net mvc project while rewriting one of my web sites with i noticed that although support for the membership provider comes included out box a 2 not all options are fully implemented to same extend they brand new webforms example option reset your own if you forgot old is available following create user login change adding turned be pretty easy as core functionality already exists and it s just matter calling from application update on november 2012 please aware wrote this blog post when had come ideas apply newer versions but code will slightly different membershipservice accountcontroller referenced actually class default 3 have looked see what take adapt 4 though process goes like logon view users can go passwordreset indicates his her username then sent questionandanswer enters answer their security question finally passwordresetfinal message indicating has been e mailed them rest describes details how works source also link at bottom views controllers first thing did was added start wired method called https hectorcorrea com images jpg secondly created http get very simple aspx allow enter so we extremely only textbox where name public actionresult passwordresetenabled throw exception allowed return pick up data continue controller decides whether next step or need ask him before required honor requiresquestionandanswer configuration setting httppost string redirecttoaction else resetpassword getloginurl configured require resetting route merely two labels another questionandanswerview fetches entered viewdata getuserquestion by time information namely hence call happens b final last displays telling generated changes model every accountmembershipservice handle much more than wrapper membershipprovider operation provides functions actions point instance calls retrieve notice job forward membershipuser getuser false null found passwordquestion methods do plus few properties expose couple features were exposed implementation summary indicated beginning download working site updated here downloads passwordrecoverymvc zip keep mind assumes its database system readme txt file inside further instructions run sample"
		},
		{
			"id": "/blog/2010-04-02/yield-return",
			"name": "Yield Return",
			"text": "yield return even though the statement was added to c since version 2 0 around 2004 i never quite understood how it really works a few days ago while going through some tutorials saw sample of code that used and decided finally look under covers learn well do you understand at below answer these two questions what is output this can explain why class yieldsample static void main string args foreach int in getsomeintegers console writeline readline public ienumerable 100 200 300 first question pretty simple tricky part explaining come arrives knows needs pick up value loop second third one reason for behavior compile time rewrites with into state machine has logic prepare so call picks on forth pseudo generated basically looks like private bool getnextelement switch case currentvalue 1 next true 3 false trying found great articles more detail particularly liked http shadowcoding blogspot com 2009 01 html by erik forbes dynamic iterators www devsource languages paul kimmel actually gave me clue use reflector compiler if are probably wondering generation when method not as straightforward little example just returns three hard coded values darn good machines en wikipedia org wiki finite have been studied lot people very however fun wrote examples my own nested statements reviewed result always same resulting returned expected"
		},
		{
			"id": "/blog/2010-03-24/the-design-of-design",
			"name": "The Design of Design",
			"text": "the design of img width 100 height 144 align left src https hectorcorrea com images designofdesign jpg earlier this month i received a draft manuscript frederick brook s latest book essays from computer scientist http www amazon dp 0201362988 sup 1 in which he reviews both what is and how process works although there plenty literature on concept brooks feels are several good reason to write another subject first that mentions has changed lot since world war ii new challenges have rarely been discussed now team activity rather than an individual one challenge unlike designers previous generations nowadays cannot longer built with their own hands they instead designs captured models build by somebody else p xi second why consider worthwhile writing much mystery remains becomes evident when we try teach students well uses his six decades experience help expand knowledge it does not attempt find or describe science fact considers such goal impossible misleading tone form few opinionated xii divided sections as follow section collaboration telecollaboration iii perspectives iv dream system for designing houses v great vi trips through spaces case studies found three fascinating but was thrilled last review am going focus mostly some selected chapters chapter 120 179 notredame addresses basic question starts following definition verb oxford dictionary plan scheme arrange conceive mind later execution 4 proposal dorothy sayers steps idea conceived mentally outside time space then implemented finally implementation used someone musical composition mental formulation composers paper ink conductor execute orchestra software project same happens its designer conceives will work source code executed consumed users questions tries address whether invariant properties itself across multiple disciplines like construction buildings development other media researched wide variety authors sources addressed throughout history including philosophers scientists 2 engineers think rational model describes calls refers orderly systematic step things cites proposed german mechanical people engineering field important highlight support useful present reasons discusses primary series secondary goals after defined proceed define utility functions weight each against entire constraints resources so can simple approach puts goes makes decision within narrowed at node could taken more paths exploration tree p15 waterfall representation different happen sequentially fallen out fashion among developers realized fit realities still enticing many proof general industry contracts require clear requirements upfront accurate estimates timelines fixed bid these only possible where completed ahead know exactly be make interesting observation notes actually very natural evidence arrived pp 29 30 3 wrong 150 whatswrong presented quickly discredits explains just ideal somehow ought real life 22 dedicates if states don t always onset most times changes evolve ideas explored indicates hardest part deciding points iterative also setting anyone worked probably obvious all stories tell typically go back forth customer decide really need once product take shape end initial learn about problem re evaluate thing typical change evolves solution developing assumed easily value adds goodness speak practice hardly decisions interconnected example particular might affect significantly performance cost integration evaluating objectively affects whole close reality way page 257 talking experiences boldest whoever made them accounted outcome bold were due sometimes vision desperation gambles requiring extra investment hopes getting better result closes third sentence harmful must outgrow 5 spiral describing argues dominant replace reasoning advocating opposed let surface organically afraid push risk having inappropriate dominate landscape did suggest use barry boehm building suggests closely resembles addition easy memorize visualize should eradication you interested quick summary wikipedia en org wiki original 1988 ieee web site portal csdl doi 10 1109 59 reference newer unified scrum controlchaos variations originally 80 train two 1900 doing teams solo distributed via telecommunication tools collocated would agree self truth certainly universally true 64 human kind working 6 single shifted attribute shift foremost technology sophistication place hundred years level specialization needed areas forced become experts certain therefore bring together get picture any given say bridge cell phone large talks necessity accelerate delivery competitive environment 65 paramount day age right being market driving force behind companies come without costs incurs person partitioning job teammates learning communication control comes however biggest conceptual integrity harder maintain keep subconsciously affected split minds norm exception proceeds give achieve architect charge making sure achieved even though members words serves during agent approver advocate user stakeholders 71 72 special forces state turn validation 81 82 scale aspects benefit highlights view brings needs sessions 7 faces aware increase 93 provides face beginning crucial eventually designperspective 8 schools thoughts rationalists rene descartes empiricists galileo galilei apply 9 explicit designed because tend assume sharing assumptions common set distinct implicit ones 115 soon trouble strikes rudely confronted effort him ask otherwise asked until unmitigated 119 summarizes succinctly particularly name scare resource explicitly track publicly firmly far insight advice rest cover blog post alt punishment mentioned entry architectural 204 17 presents convey machine 18 opposite using visual clues audio tactile feedback problems difficult processes related role opposing views between aim predictability friend 233 20 developer dedicated seven participated big disappointment me had wrote meant add study included includes famous 360 architecture ibm operating projects managed 1960s personal constructions house architectures reading recommend improving understanding create solutions references pearson education 2010 24"
		},
		{
			"id": "/blog/2010-03-01/flow-second-generation-lean-product-development",
			"name": "Flow: Second Generation Lean Product Development",
			"text": "flow second generation lean product development img alt the principles of width 120 height 178 align left src https hectorcorrea com images flowbook jpg last few weeks i ve been reading book http www amazon dp 1935401009 by donald reinertsen sup 1 in which he describes what calls lead from perspective software products and this review will highlight examples on that area however s is about general e g a new drug or cell phone not particular paradigm for although it could be called chooses to call based differences exist between manufacturing unlike primarily deals with predictable repeatable tasks homogeneous delay costs task duration these situations are norm almost definition hardly ever have very high variations case uncommon teams dealing problems they never solved before writing brand system technologies team likewise cost delaying implementation feature versus fixing specific bug can widely different chapter one starts describing twelve critical traditional orthodoxy including failure correctly quantify economics blindness queues worship efficiency hostility variability institutionalization large batch sizes underutilization cadence managing timelines instead absence work progress constraints centralized control remaining chapters presents eight ideas themes suggests address size wip synchronization fast feedback decentralized some already popular thanks wide spread adoption agile processes example scrum recommendation short sprints helps reduce daily collaboration developers qa during sprint as well frequent demonstrations advocated allow take place other his like mainstream yet kanban 2 3 making strides areas clarify why changes important topics premise we do make money p 15 most cannot their view currently focus proxy variables calculate economic impact rather than using real objective strong life cycle profits 29 typical variable time typically try optimize shorter surface sounds all good how much actually terms an when objectively value profit working b if does know bottom line decision makes more sense company without knowing two features might decide because appealing needed busy wrapping something else knew bring four times delivered first act rearrange complete points out having common unit measure solves many allows decisions even keel measurement at moment proposes given choices implement rush release market use comprehensive approach wait months either correct right choice depends point rushing being too its doing technical debt incur outweigh benefits things should considered measured same indicates research tend think asking people responses vary 50 ratio answers such range obvious contains nineteen help provide silver bullet provides start focusing paying attention 31 u curve optimizations 35 trade off 37 marginal 45 where management problem understood has optimized years entire books written manage bottlenecks assembly lines prevent inventory accumulation goal process ongoing improvement 0884270610 eli goldratt there little literature addresses effects equivalent developed but production under still tested reasons so poorly managed invisible you walk around plant see lying floor sits shop easily identified looking items ready coded released wondering care no associated storing cause several unwanted side longer increased risk overhead lower quality less motivation queue larger test need go number then also translate higher version theory formula layman says average determines 112 means reducing complex solutions long adding staff methods experienced week cycles old fashion multi month engineering 4 david anderson gives explanation apply another reference learn subject after aware importance moves while limiting nature amount fundamental random 143 beginning 6 applied telecommunication networks deal probably would systems movement industry raise awareness causes look limitedwipsociety org works technology organizations summary found interesting easy read concepts described understand recommendations pull references celeritas publishing 2009 successful change unpublished manuscript november kanban101 quick introduction applying business results prentice hall 2003"
		},
		{
			"id": "/blog/2009-06-03/team-dynamics",
			"name": "Team Dynamics",
			"text": "team dynamics a few years ago during my scrummaster certification our instructor talked about the different development stages that teams go through he used tuckman s model which includes four form storm norm and perform in this start at stage when they are first put together is honeymoon period of new spirits high everybody optimistic but work just to begin after once has commenced members try find their place phase into as on starts working cohesive unit finally some reach another called become performance i ve always found knowledge incredible valuable knowing these normal behavior very important leader also recognize need leadership styles blanchard et al have nice chart where explain kind recommended each them https hectorcorrea com images leadershipstyles jpg needs significant amount direction newly formed little support since typically excited by being part moves second tension among raise act coach provide both for get rough recognizing other talents trust one commonly misunderstood bad tend feeling down discrepancies between initial hopes reality kicks 4 politeness fade people more roles so argue things were left unsaid or not realized met 3 however indicates calling like adolescence process develop you should be careful help grow out instead trying prevent altogether letting perpetuate article changeminds org provides guidelines how manage including manager here assert role draw resolve differences might otherwise bubble along under surface causing continuing cohesion problems storming can reduced clarifying goals individual objectives know what success means focused moving third increases keep supporting make sure kept point clear idea task hand already making decisions step back let flourish reaches fourth shift delegation own itself performing beside group authors proposed main same phases lifetime an thing note previous example reached caused changes software could result adding developers changing goal market pressures small say going from six enough disrupt established aware accordingly unfortunately common occurrence qa resources bonded only it practice push testing system towards end cycle will bugs code slow exacerbates impact likelihood taking less productive better approach case would include beginning effort if don t luxury add address functional bring take away post twofold remember all your there lot material regarding productivity good reading alasdair white paper comfort zone management 5 references 1 copy bruce original 1965 developmental sequence groups http findarticles p articles mi qa3954 200104 ai n8943663 tag content col1 2 wikipedia en wiki forming norming changingminds explanations htm explanation plays was taken minute builds ken william morrow 1990 page 70 www pm solutions managementapril2008 pdf"
		},
		{
			"id": "/blog/2009-04-18/transactionscope-complete-maybe",
			"name": "TransactionScope.Complete Maybe",
			"text": "transactionscope complete maybe during a training class this week i learned that the method in works different from what have always thought ve when you issue call to transaction is either committed or get an exception if cannot be my mind once returned it was sure bet successfully turns out not necessarily true following code snippet shows typical usage of connecting sql server database steps are basically start few commands and commit real application will more than one command perhaps nested transactions but idea pretty much same using tx new sqlconnection conn connstring open string insert into mytable id name values 1 test sqlcommand executenonquery console writeline has been issued stop press enter continue readline yikes didn t throw even though stopped particular example however am purposely forcing error condition by pausing program right before then manually shutting down finally letting its execution definitively something do point emulate happens goes on surprise case executed came back with no indication happened below output gave me https hectorcorrea com images txcomplete jpg notice how lines after were which means thrown at time come possible does mean way knowing succeeded failed kind big deal here work quite did msdn http microsoft en us library system aspx says satisfied all operations within scope completed should only inform manager state across resources consistent can very good practice put as last statement block actual between end object created create occurs whenever called owner committabletransaction calls resource managers informs them rollback based whether clearly indeed let reach got txcompleteex knowledge s review line already shutdown informed far we concerned could why problems next reached tried detected wrong threw indicating doubt there also inner elaborated transport level occurred result net being able confirm best actually really similar situation where happen production environment would too know for wasn since moment wouldn lost connectivity sent say go rather our network couldn might received just correct ask make matters interesting use handle against other databases glad whoever wrote framework these conditions so don check mdsn documentation writting transactional applications ms229973 information"
		},
		{
			"id": "/blog/2009-02-02/the-model-view-controller-is-dead-long-live-the-model-view-controller",
			"name": "The Model View Controller is dead, long live the Model View Controller",
			"text": "the model view controller is dead long live last few days i ve been reading microsoft net architecting applications for enterprise http www amazon com pro developer dp 073562609x by dino esposito and andrea saltarello on chapter 7 talk about presentation layer in particular they touch mvc presenter mvp pm design patterns really like how demystify put them context start describing these have evolved over time state that definition of worked 1980s even 1990s might not work today as a result probably nobody uses its authors originally devised it completely agree with this statement matter fact quote reason stopped was browsing through book though didn t an immediate need actually looking business service but s topic future blog entry another interesting observation make when initially developed intended to be used whole application just however since most developers intuitively layers opposed building monolithic norm role pattern has shifted more than level do great job explaining simple sequence diagram rather using quintessential chart three circles words inside below drawing use https hectorcorrea images jpg from easy see upon user action e g click button talks turn makes me wonder if should called instead notifies changes occurred reads new what we call logic represents controls are drawn screen represent windows forms or web ideally possible draw intercept actions forward practice typically some handle things related data binding sometimes validation there trade off between having simplest views one no tends involved only place code tens simpler now you two places neither right nor wrong decision will face choose best given above can also take care request made main jobs script required calls requires responsible creating passing control triad does require then scripts existing something keep mind selecting which go next complex real nothing intrinsic common misunderstanding separates point out aforementioned knows directly observer relationship newer derived addressed issue other improvements produce suitable sharp bold classic gone variations healthy thrive model2 both recently undergone facelift july 2006 martin fowler proposed retire entirely replace passive pv supervising svc 2 again adapted medium wasn around at first created java server pages asp framework relevant review differences let look couple become evident soon compare reviewed thing little bit complicated components secondly still embedded shown very 1 anything quite different becomes means much set based information viewmodel passed class dataset custom render html remember targeted case receives access although subtle difference goals frameworks so elements introduced browser front users indicates submit post requests implemented via module captures analyzes decides scott gu good works weblogs scottgu archive 2007 12 03 part url routing aspx mentioned before variation superseded worth exploring beyond scope their highly recommend anyone doing while well known modern perspective development addition msdn article en us magazine dd252940 checking"
		},
		{
			"id": "/blog/2009-01-13/rubber-band-reports-with-pivot-tables-reprint",
			"name": "Rubber Band Reports with Pivot Tables (reprint)",
			"text": "rubber band reports with pivot tables reprint img align left width 120 src https hectorcorrea com images pivottable jpg a few years ago i wrote an article for the now defunct universal thread magazine on how to create using excel s was titled programming and showed from visual foxpro vfp application although is more than 6 old still get questions every then about code samples that mentioned in original can be found here downloads correa pivottablesvfp zip vb net version of at pdf also correapivottableswhitepaper"
		},
		{
			"id": "/blog/2009-01-07/expose-your-data-as-an-rss-feed-with-net-3-5",
			"name": "Expose your data as an RSS Feed with .NET 3.5",
			"text": "expose your data as an rss feed with net 3 5 in talking my one of friends http geekswithblogs thecodemonkey default aspx a couple months ago i found that now has built classes to generate feeds this was great news me since both personal blog site and the dotwiki https hectorcorrea com 2 0 25 but for longest time ve been using unsupported library downloaded from web years last month updated use these new instead old recent changes wiki topics although rather comprehensive had hard finding good practical examples on msdn how them sup 1 lucky bipin joshi posted two www dotnetbips articles 4826711c 3f25 48ef 94d0 5c40b628c203 consume addaf09f 9b6b 45d2 aba8 da11f23aa53e below is code looks like list 24 hours complete available follow source links page system servicemodel syndication define syndicationfeed title textsyndicationcontent copyright c 2008 all rights reserved description link represents syndicationlink uri add load items we want more loadblogitems prepare response proper encoding content type clear contentencoding text utf8 contenttype xml dump into xmlwriter rsswriter create output rss20feedformatter rssformatter writeto flush close end which adds individual shown method returns generic syndicationitems each element contains information about topic changed topiclist example are specific rest plain private syndicationitem getrecentchanges getlatest last24hours foreach topicinfo gettopic id basic item tostring name lastupdatedtime updatedon string url format httputility urlencode addpermalink author syndicationperson email somebody somesite authors return generated by seems be fully compatible popular readers bloglines google reader reading documentation microsoft en us namespace it there support atom addition have only tested formatter though update actually nice sample under class shows same or"
		},
		{
			"id": "/blog/2008-12-23/multiple-endpoints-for-a-wcf-service",
			"name": "Multiple Endpoints for a WCF Service",
			"text": "multiple endpoints for a wcf service one of the nice features that windows communication foundation provides is ability to expose single via so different client applications can consume same over network protocols example be exposed http external clients and tcp internal in an endpoint refers combination address where available binding used communicate it contract exposes these three parameters are commonly known as abc represents url found localhost 8000 helloworld helloworldservice or net 9000 describes transport channel vs functionality maps servicecontract interface your c code configured app config through this post i am going focus on how configure file let s assume we have simple hello world implements ihelloworld like shown following snippet namespace https hectorcorrea com public operationcontract string greetings yourname datetime thetimeis class return format 0 isnullorempty guest now host you use first line creates object second opens receive process requests call open will read settings from more later decide what opened rest displays were finally readline put wait state they come servicehost new typeof theservice console writeline has been started foreach serviceendpoint description contracttype please enter close server side configuration xml shows defined lives notice basic ws each them its own behaviorconfiguration theservicebehavior name 1 basichttpbinding httpendpoint 2 nettcpbinding bindingconfiguration tcpendpoint 3 8003 wshttpbinding timeouts opentimeout 00 30 implemented running waiting send turn create application connect proxy called helloworldclient using named then makes couple calls methods closes connection hector time closed created before generate beyond scope see references at bottom information nutshell skinny version uses forward request across wire actual thanks don t write any low level networking stuff deal with since wraps us looks calling machine by just looking no idea if country do tell find real either show keep mind discussed reviewed also imagine subset tells while listen particular all listed illustration purposes but could well definition similar ones yet defines httpbindingparameters helloworldproxy tcpbindingparameters wshttpbindingparameters wshttpendpoint matches indicated when executed values recognizes messages after automatically forwarded our up listening e expected result change changing little instead remains unchanged mentioned beginning typical scenario great book learned most blog learning www amazon hands michele bustamante dp 0596101627 michelle leroux want two good msdn link microsoft en library ms733133 aspx miguel castro article manually devx codemag 39837 page"
		},
		{
			"id": "/blog/2008-11-30/flickr-library-in-c-sharp",
			"name": "Flickr Library in C#",
			"text": "flickr library in c the last few days i ve been working on a sample to access pictures using s own api this is light weight class that provides two basic features 1 retrieve list of photosets your account and 2 information about photos photoset you can display them combobox with lines code like these new yourapikey youruserid photosetinfo getphotosets cbophotosets datasource datatextfield title datavaluefield photosetid databind once select inside it url following example am binding an asp net datalist control photoinfo getphotosinset selectedvalue listphotos lblphotosmsg text count 0 no supports multiple requests response formats rest format for responses my flickrlib typical request looks http com services method methodname amp param1 value1 param2 value2 where name call getlist return provide are xml documents pertinent would be document node several children nodes very easy parse linq turn into strong typed objects which then bound classes exactly what does wrapper functionality so easily consume from applications references download source here https hectorcorrea downloads flickrlibdemo zip flick visit www there lot how use tons might find useful little not expose will need obtain key order their through or any other free but needed prevent single user submitting too many site take down"
		},
		{
			"id": "/blog/2008-11-11/devconnections-2008",
			"name": "DevConnections 2008",
			"text": "devconnections 2008 below are the brief notes that i took while at in las vegas november this blog entry is mostly bullet points of things found interesting without much details ll elaborate on some these topics future entries tuesday 11th opening keynote scott gu started with an overview new features released last year which included dynamic data access to build a database application wizard charting controls for asp net mvc tdd friendly closer metal html programming model not everyone several silverlight demos then he went describe coming visual studio 2010 and 4 0 s ui will use wpf rather than windows form better support release deployment e g multiple web config files one each environment documentation integration tfs work items native sharepoint workflow distributed caching apps look project velocity continuum desktop ria chris hammond has very nice summary session entity framework world services processes edmx generated ef serializable by default makes it compatible wcf out box context equivalent connection gotcha you need enumerate linq results before passing them back if as should surround your using statement code var from x ctx blogs select y return toarray end my opinion seems unfinished although really easy ready object interface save inserts updates looks complicated hacks were needed problem stem fact good understanding state but inferring intent currently all operations apply entire graph there no way make more granular be worked version 2 ado sets formerly known astoria accessible through http via rest approach inferred url soap uses lots verbs few put get post delete nouns so what hanselman gave presentation describing provides does when compared traditional forms first thing clarified greater or webforms secondly both approaches here stay they target different audiences hides developer adds subsystem type gives control over lends easier test unlike event button click page postback viewstate lifecycle we lose many isn t like going classic was separation concerns lumped single wasn can mix match site typical follows format controller method methodparameter example products retrieve 3 name comes view pattern sites c interact m views v enforces clear between know anything about job used own third party showed kind product called nhaml quite webform constructing everything speakers tour flavors query variety sources slides msdn com aconrad objects mechanism sql functionality targeting server only entities higher level abstraction includes modeling models supports backend plug ins available point dataset don los investment datasets microsoft flavor tag line having say re sorry offline extra joins xml lightweight api lighter dom classes aware xdocument old xmldocument generate documents xdoc xelement contacts where country south africa vb directly regular add quotes embed expressions similar embedded rendered runtime produce final cool too bad have allow publish based any client consume localhost myservice svc customers alfki orders customer key cloud pdc earlier unveiled two azure insert custom provider write source must implement iqueryable iqueryprovider main challenges 1 translate language transform demo twitter implementation implementing restful 5 sp1 www robbagby 1993 content today capabilities linked resources fixed set architectural style specification play well honor response codes other applications run proven why continuing binding webhttpbinding envelope webget webinvoke attributes starter kit codeplex three components dll servicemodel templates samples rob suggested four our provide appropriated chose representation addressability valid fully supported attribute responseformat parameter uritemplate webprotocolexception class wednesday 12th making leap came late part speaker richard campbell honest start host load balancing improve reliability scalability necessarily into performance resistant hardware faults users won become faster nlb overhead processing request especially affinity tell cluster drain let finish whatever requests sessions take expected draining hours since expire immediately could keep submitting same machine free up until been closed expired marked saved cache because stored proc important information minimal storing process stores memory twice fast failure store prevent parties worth considering recommends create go testing clusters sure large time spans 10 15 minutes least realistic picture detects goes down detect iis becomes non responsive paid durable juval lowy talking pass band parameters header identify who call instead forth bindings feature word basichttpcontextbinding wrapper breeze download his idesign after explaining moved talk how most implicit assumption short milliseconds assume ok duration fall days clients may come hosts move machines long running cannot service times persist identifier pull correct persistent storage basic ways around every ugly introduces infrastructure business methods values preferred change static side thread safe lock durableservice mark durableoperation completeinstance true indicate completes done completed caller once recreate required examples file simple under folder scripts towards demoing transactional got lost idea transactions happen execute exception happens basically decide changes committed building router michelle leroux bustamante talked route messages kinds routers far advanced attended conference even though did great topic waaaaay understand she described reasons might want routing serve software balancer typically practical cheap also do message strict sla best servers something solution couldn useful online scenarios considerations receives forwards its none security accepted however implements reject indicates originally smart enough receiving another issue now see somebody tampered original headers explained address issues transport protocols tcp trivial uneducated me nevertheless possible general turn couple working realize off deal showing would depending algorithms including round robin body dino esposito presented introduction operates read layer top connections readers such specific vendors table column represent partial extend logic relationships tables implemented composite provided invoices duedate invoice firstname datacontext tracks lived recreated open hit detected n tier mentioned yesterday addressed v2 curious queries syntax lot updated populate submitchanges push ve reading procedure perform kludgy whole concept clone attached just right am seem extremely awkward lazy loading aka deferred instantiation children collections count zero had trying force update property didn field ideas eye knew csla rockford lhotka stuff mature suppose value their current thursday 13th high computing hpc nick landry user needs submit massive handle number super computer network calculate stock projections calculating projection intensive gets worse portfolio case 100 stocks submitted compute runs hcp batch jobs command allows plus pack licensed cpu offer cheapest setup head node join existing scheduler knows libraries getprojectionsforallmystocks broken tasks per parallel productive focused plumbing underneath wcfsvchost exe library fire wcftestclient program particular instrumentation counters monitor perfmon tracing logging illusion care returnvalue else display reality little error telling app already ones configuration tool diagnosis auto flush stop debugger middle activity id checkbox refers logical across tiers et cetera traceviewer utility automatically merge log overloading modify proxy tagging alias int addint float addfloat datatables platforms bound schema arrays fault debugging bubbled throws throw faultexception exceptiondetail include detail catch addition generic jquery rick strahl conceptually sense document returns popular 100s pretty small 16kb css selector dot pound sign ids"
		},
		{
			"id": "/blog/2008-11-10/managing-and-leading-the-one-thing",
			"name": "Managing and Leading (The One Thing)",
			"text": "managing and leading the one thing img align left src https hectorcorrea com images onething jpg a few years ago my friend bill from rebar business builders http rebarbusinessbuilders recommended me book you need to know about great sustained individual success www amazon dp 0743261658 by marcus buckingham for while i hesitated buy this initially title kind of put off but ended up buying it reading back then knew had enjoyed until recently didn t realize how much took first that helped clarify was difference between not only are these two roles talents needed perform them different they opposite points main focus managers his her employees leaders is better future here puts in regards management p 83 all discovery what unique each person capitalize on regard leadership 132 every leader knows he must do discover universal provides several examples see people as an end unto themselves derive satisfaction seeing tiny increments growth someone else their serve find care situations where shine will go above beyond rearrange world take advantage employee s strengths turn tends drive productivity teams which why companies most important allow role ability coach perceive differences other hand have well when way make many regardless uniqueness excited confident tend be fascinated believe takes optimism ego because convinced can overcome present challenges there something pessimistic get humble assessment own abilities yet does mean brash or abrasive matter fact quite reserved 66 68 agile blog david anderson has interesting post lead prosper agilemanagement net articles weblog leadwellandprosper html echoes some thoughts think having clear idea very software development particularly developers start getting promoted positions expected manage company expectation senior developer should sure your skills position enjoy best team good at vice versa both either applies peers report also goes far claim born made 69 bases with learn am agree disagree statement uncomfortable thought wrong general highly recommend into"
		},
		{
			"id": "/blog/2008-10-04/introduction-to-scrum",
			"name": "Introduction to Scrum",
			"text": "introduction to scrum img align left src https hectorcorrea com images codemayjune2008 jpg my article has been published in the may june 2008 issue of code magazine http www aspx quickid 0805051 as i said this is an agile process manage software development projects not prescriptive on engineering practices but rather it a lightweight framework based few common sense guidelines for managing dedicated jeffrey palermo interesting 0805041 that starts with quite line everything right or wrong project management s fault jeff then goes talk about fallacy fixed scope unspoken quality variable hiring and firing customer other areas where needs act how done jean paul boodhoo provides list 16 steps 0805021 improve your skills using techniques are particularly like his approach trying these little by example start doing unit testing get comfortable evaluate test driven tdd scott bellware talks behavior 0805061 bdd often specifically design units modules such classes also concerned its focus addresses much broader range concerns he misunderstanding while fact all displayissue id 4659d960 1235 4848 aeb3 a02c1a441300"
		},
		{
			"id": "/blog/2008-09-16/skeletons-mona-lisa-and-problem-solving",
			"name": "Skeletons, Mona Lisa, and Problem Solving",
			"text": "skeletons mona lisa and problem solving one of the best practices when building applications that i ve learned over years is value always having a running version application available to show end progress on system being developed although this common sense it s easy get caught day activities lose track these things typical situation in which teams seem forget writing brand new scenario have bunch components half way written not ready for production most development tend be ok with am as long they all compile can run successfully functionality implemented so far does matter only perform sub set features final will should people experience first hand how each modules interact other walking skeleton img alt align left src https hectorcorrea com images jpg trying explain concept friend mine found there even pattern explains idea comes cockburn sup 1 calls http alistair us index php tiny implementation performs small function need use architecture but link together main architectural then evolve parallel points out different from proof or spike later meant throw away code while time approach relies heavily procedure place support evolution fleshed pun intended strategy incremental rearchitecture recommend unit testing make sure some basic today remains fully functional tomorrow few are updated accommodate ideas monalisa his article neglected practice iteration www stickyminds jeff patton talks about difference between iterating incrementing no synonyms touches angle uses drawing describe differences an iterative software if we were pure would start by perfection section painting say her hands ll draw completely arms face forth using sketch pencil our do second increment detail perhaps give coloring third put keep has great graphically point you both iterations increments lot thing two words work single module before moving next disadvantage neither user nor developers see complete picture until usually too late users rough whole early relates depth versus breadth their book lean poppendiecks 2 talk ways solve problems might thought funnel more like tunnel involves delaying commitments invokes making similar aim incrementally update its known domain think approaches complimentary just times where preferred vice versa notice require expertise was correct selection area zero getting right requires someone decisions correctly assurance any changes render obsolete lacking conditions lead better results observations made novice designers biased toward irony decision something designer definition probably won t further believe bias reason apply instead than knowledge business expected typically also very effective stable e g strong again understand details likely emerge savvy know arrived however choice personality types play big factor important consideration since your team favor remember once enough commitment go deep references alistar crystal clear human powered methodology 2005 addison wesley pages 49 53 poppendieck mary et al agile toolkit 2003 60 62"
		},
		{
			"id": "/blog/2008-09-11/static-constructors-and-asp-net-applications",
			"name": "Static constructors and ASP.NET applications",
			"text": "static constructors and asp net applications a few days ago i was running into an issue with class in application the thought that constructor not being fired it turns out as should but often would be constructs are once per app domain windows this means is every time launch access if close run again hit will web also case does translate to re open browser closing launching terminate launches here simplified example of scenario ran notice count 0 code public staticclass int get return partial default system ui page protected void load object sender eventargs e print lbltext text string format very first prints 1 refresh 2 what you expect guessed wrong like did 3 rid since apparently still under iis really want force reset counter need kill worker process g iisreset hindsight obvious one my co workers pointed we lucky apps work suck big user closed their well next pay moral story keep mind don t have much control on when guarantee accessed includes after loaded recycled your goes away new visits site all good desired effect just"
		},
		{
			"id": "/blog/2008-09-03/computer-museum-paris",
			"name": "Computer Museum (Paris)",
			"text": "computer museum paris early august i had the opportunity to visit in musee de l informatique http www museeinformatique fr has a neat variety of computers display that range from 1960s mainframe personal models ibm apple commodore 80s and other related stuff including punch cards old hard drives mother boards software name few here are pictures took while was there first things 1960 s big cabinet left with bunch yellow wires below clock is memory bank 32k ram right cpu need remember this picture next time complain my laptop too heavy https hectorcorrea com images jpg pc almost identical owned check it out two not one floppy ibmpc also saw they didn t have 64 which very used but reminded me lot those days course for you who started on dark side an ii walk down lane sidekick anyone ve got admit no better way edit turbo pascal 3 0 code than terminate stay resident editor like high tech circa 1985 dos developer cartoon disks drive harddrive floopy floppies"
		},
		{
			"id": "/blog/2008-07-27/dotwiki-2-0",
			"name": "DotWiki 2.0",
			"text": "dotwiki 2 0 i ve posted a new version of the that introduced back in 2004 this code magazine article http www codemag com 0403081 is complete rewrite using c and it has several features more attractive look feel security probably most important feature since had been by far commonly requested released original 2002 previous versions updates to vb net felt full was order clean up remove unused reflect what learn release add few doing exclusively for last years took plunge rewrote implemented asp membership provider s amazing how easy secure site built creating users resetting your password logging out such also uses rockford lhotka csla cslanet default aspx business objects framework read write data are typical you don t need know much if anything about understand yet helps me tremendously keep logical tiers still fckeditor provide see get wysiwyg experience user updated use 6 which supports safari browser am continuously amazed on free stuff there applications good fantastic middle tier object open source integrates seamlessly with comes all javascript part design starter kits have always itself hope developers find as useful or update february 2015 no longer maintain support however available download at following links latest https hectorcorrea downloads zip vs2005"
		},
		{
			"id": "/blog/2008-02-25/upgrading-your-software-development-tools",
			"name": "Upgrading Your Software Development Tools",
			"text": "upgrading your software development tools late last year november 2007 to be exact microsoft released visual studio 2008 http msdn2 com en us vs2008 default aspx with net 3 5 production this has generated a lot of buzz around the new features what s hot you should looking into and so on beta cycle for vs was long very public there been articles access while but now it here real people can go buy today or download from msdn teams that have just wondering how about upgrade need answer question do we most developers are technology driven love technologies seems personality trait regardless chose desire move latest greatest version as strong in foxpro vb 6 nineties crave day when use yet responsibility our users doing responsibly upgrades hard perform medium large systems number like things these kinds planned order give customers although decision not is specific every project i usually tend recommend going projects actively being developed thinking twice before switched maintenance mode no why would want if updating options environment takes time money even consider fact available hardly enough reason team stop developing spend days weeks performing retest system then continue some benefit customer an make sense come benefits realistic will short term wary magic one common mistakes promise themselves others productivity increase incredibly tool application magically half look much better than because wpf foolish assuming windows workflow engine 0 solve all issues never used also poor assumption get learn really works does case ton apply wide variety made more ago finally easy provides awaited designers ajax wcf linq name few indeed help responsive provide communication other applications such process varies two main guidelines ve found useful try first test ample e don t week second entire only source code deployment affected third party upgraded well my experience tests testing always work out glaring reviews show up once necessary covers small portion g pitfalls might those areas later sort catch 22 initial idea won good until evaluate range et cetera hold breath still run app c est la vie did tremendous by allowing target 2 runtime huge advantage take since allows them ide keep runtimes same incorporate little example possible forms which means rewrite user interface existing at become comfortable plan migrate rest"
		},
		{
			"id": "/blog/2008-01-09/estimates-on-software-projects",
			"name": "Estimates on Software Projects",
			"text": "estimates on software projects is one of the most controversial topics development including process to calculate them and value that they add every team i have worked with needs provide how long it s going take complete a specific feature system yet teams seem struggle this activity developers enjoy attending meeting as much visiting dentist project owners typically complain unreliable are unbelievable even been writing for many years cannot give accurate in my experience there several reasons why providing so hard poor specifications lack domain knowledge technology challenges optimistic tough commonly voiced reason inaccurate good typical be asked estimate features don t fully understand client requests new screen do x but lot unwritten expectations users will demand once start using know about usually due business trained very little or nothing if being written insurance billing unlikely enough education training accounting might working first time faced purposes when decent amount conversation between analysts product place explore what requested entail inevitable things left unsaid find out developed presented user ve companies where we received reams paper looked like covered possible detail built just 1 still incomplete 2 really represent customer wants produced fair share specs thought were nope not discovered until feedback groups try stay up date upgrade versions compilers databases environments such thing since these tools meant speed make better use existing hardware cost associated upgrades need spend performing learning ways doing cheap plus happens regular basis example 2000 microsoft has released three c 0 2005 3 2007 during same sql server 2008 you may tempted say heck update anymore also your run computers look ugly e g imagine dos application running windows secondly tend driven lose some best see falling behind their skills met myself included by nature people please our customers an impact case scenario tells us hardly ever materializes account unexpected way brooks mythical man month p 15 assumption all go well probabilistic effect schedule requires dealing abstractions unknowns tight technologies activities deal physical limitations size weight counts other understood constrains hand deals almost pure stuff 7 unconstrained environment trivial yes definitively despite grim picture painted far strongly believe valuable price tags sense allow decisions comes deciding priorities four week each fourth looks two months alone owner able decide she delay large vice versa decision having idea can get divide conquer small blocks functionality off either task estimated days takes twice later adjust planning however probably too late address problem more blow whatever likelihood blowing second constantly calibrate put bluntly realistic history guidance completed rather than guided hope common quot took me weeks now would only next works remember bound posture something should number baseline future reduce proven done half koskela howell great http www leanconstruction org pdf obsoletetheory which propose moving away from thermostat model arbitrary productivity goal set at onset into scientific experimentation based previous results approximations promises prefer light approach spending whole mean getting together no hours think accomplish come relatively short term david anderson tongue cheek post he calls stop estimating agilemanagement net articles weblog stopestimating html reality agile agileestimating methods spent calculating guarantee producing delivering mike cohn book amazon com dp 0131479415 subject does describing story points velocity highly recommended joel spolsky article evidence scheduling stickyminds bettersoftware magazine asp fn cifea amp id 94 ebs uses monte carlo simulation particular sounds interesting tried fact historic values probabilities promising am afraid effort provides any missed worst taboo although everybody misses nobody talk over let bring down review act findings perhaps complicated perfectly ok admit maybe break smaller chunks less distractions sure longer expected similar tell yourself because before somebody else paragraph was expect 5 forecast instances individual developer shot larger issues addressed right job qualified always valid questions pace expects both role learn effectiveness few cycles necessarily after rounds different experiences personality styles useful setting"
		},
		{
			"id": "/blog/2007-12-13/the-scrum-daily-meeting",
			"name": "The Scrum Daily Meeting",
			"text": "the scrum daily meeting we use at office to manage our projects one of key practices is or http www controlchaos com about management php a short 15 minutes in case held every day same time with whole team product owners qa and developers goal keep everybody informed progress since last make sure there are no roadblocks rules for simple must be boxed member report what have you done will do from now until next any preventing move on most remote participants i used show spreadsheet sprint backlog projector their status was shared real users updates were seen by this nice idea it kept all local involved however approach had huge disadvantage focus became rather than tended very mechanical when reporting they common people say take 3 hours down line 25 4 28 describing did e g worked problem that prevent outside domain logging year decided stop using meetings still get together but instead looking some bring notepad list things while others memory little change has made difference much more conversational ever central look peers moved away been easier where gets s going project really talk doing just taking tasks example during need describe working bug login process saying 20 track number remaining items"
		},
		{
			"id": "/blog/2007-11-10/windows-presentation-foundation",
			"name": "Windows Presentation Foundation",
			"text": "windows presentation foundation i ve been reading about wpf for a while and at devconnections http www com this week attended few sessions on the topic to day still have mixed feelings new technology one hand am really excited see work done smart clients user interface in fact that takes into account graphics hardware available most machines these days is nice uses direct x instead of gdi render images display which turns faster rendering even more complex uis expression blend product targeted designers also addition hopefully will help developers ui together resulting better applications other disappointed microsoft has lowered abstraction layer raising it seen focuses how easy do buttons gradients nested controls stack panels such gosh s not very productive eager provide polished interfaces our users but cannot believe year 2007 we are attending wish ms had provided much richer environment top basic functionality they created lack data grid another issue struggle with allow you create your own bind why isn t there native vs 2008 beyond me fortunately lot third parties filling vacuum providing grids some them least now free pleased can mix match classic forms same application would us start migrating paradigm slowly rather than starting from scratch"
		},
		{
			"id": "/blog/2007-10-30/software-developers-and-process-improvement",
			"name": "Software Developers and Process Improvement",
			"text": "software developers and process improvement one of the topics that i ve been noticing for a while is how we as tend to worry about our development try educate ourselves on topic other project stakeholders don t seem show much interest it example often talk who are trying implement scrum rup or at their companies they fell executives business owners analysts not interested in should seems s always drive these initiatives most interesting part however an activity be left alone even when if has impact bottom line company usually does done collaboration with qa well intended might see whole picture bound make sided conclusions buxton http blog businessofsoftware org 2007 10 angry mans html says typical approach engineers having sole responsibility new product like ice hockey team all goalies no matter good your aren going beat bad proper mix players my co coworkers had great idea taking couple local agile user group both seemed have enjoyed learned few things yet was only time attended meetings given books lean some moderate success although read fails spark ideas what else doing from seen there several reasons why non pay attention just small job deal because e g needs help creation x but real goal necessary evil people care too where piece every conversation inevitably turns into discussion tools geeky issues feel lost think anything wrong existing problems thing way haven realized could participate best so this open invitation users jump members you others can do develop better get more"
		},
		{
			"id": "/blog/2007-06-28/the-mythical-man-month",
			"name": "The Mythical Man-Month",
			"text": "the mythical man month last week i finished reading http www amazon com software engineering anniversary dp 0201835959 by frederick brooks for third or so time although this book was originally published in 1975 it is still a great anyone involved development edition that read 20th and has few extra chapters with updated information there are two particularly like no silver bullet essence accident chapter explains why using as unit measuring size of job dangerous deceptive myth implies men months interchangeable he goes on to explain commodities only when task can be partitioned among many workers communication them true reaping wheat picking cotton s not even approximately systems programming typical problem our industry cannot enumerate how times we ve estimated take x number y developers say 6 2 then somebody come but if give you twice people ll finish half right 3 4 hardly ever works out having more team bad comes price productivity mainly due work allocation happen members logical tendency underestimate burden because tend see women most projects rather small 5 10 compared worked hundreds managed ibm os 360 group back sixties yet law adding manpower late project makes later applies smaller actually reprint from an article wrote 1986 ten years after original been added declares next decade 1996 will major technological managerial improve one order magnitude la aristotle divides difficulties face develop accidents inherent nature those today attend its production mind kinds tasks essential accidental ones which abstract constructs trying solve programs do implement these languages machine code advances have happened helped us performance address e g higher level faster smarter compilers better ides however little done carry hence improved building inherently difficult while probably seen shortage bullets wannabes who forget about case tools artificial intelligence expert let uml unified process blog entry does try diminish progress had over incredibly nowadays takes lines what used thousands just decades ago they addressed part equation gems said at beginning highly recommend brook writings also his other design https hectorcorrea 40"
		},
		{
			"id": "/blog/2007-01-09/thoughts-on-unit-testing",
			"name": "Thoughts on Unit Testing",
			"text": "thoughts on unit testing a test is piece of code written by developer for the intention this to prove that does what intents do pragmatic in c http www pragmaticprogrammer com titles utc2 tests are not substitutes requirement gathering or qa they an additional tool developers can use produce better systems but why would i write such lot complain when first time fell kind silly like there no value writing just wrote example let s say you new method add record database and then verify e g fact added suppose spend half your morning its well off course it will pass darn don t realize gain whole 1 once run object directly without having fire application login launch customer screen click populate some data hit save look if was saved available need these steps automatically amazing how much long plus mention manually repeat those redundant every want class 2 few days later come ever reason have verifiable tell supposed might as familiar did weeks months ago yet tells used 3 something accidentally breaks constrain prevents null field allow nulls way know work now doesn won wait user he problems saving customers sooner rather than against ve read classic literature probably thinking committed horrible sins saying my adding aren be independent external components databases isn big talking about same sentence truth two camps issue one camp says should dependencies other thing all has guess am second see since most us business applications pretty access reading creating updating deleting bite bullet rely after happen related changes structures stored procedures connectivity issues et cetera pay price slower break even though problem itself with think worth doing mock question martin fowler great article called mocks stubs martinfowler articles mocksarentstubs html describes differences between types helpers ramifications using them starts pointing out main state verification while behavior difference approach driven development each techniques brings table highly recommend his any interested understanding objects already different from likely very similar little snippets sql scripts utilities find their however we usually informally treat throw away so instead throwing our make part em real keep under source control constant basis maintain reflect start simple small obvious execute particular check chapters amazon addison wesley signature dp 0321146530 tdd although book get ultimate goal rational behind try right bat comfortable concept experiment styles"
		},
		{
			"id": "/blog/2006-11-27/binary-tree-in-c-sharp",
			"name": "Binary Tree in C#",
			"text": "binary tree in c a few months ago i decided write program to handle trees was lucky still remember some of the basics this data structure from my college days and able add operation code walk hours make things more interesting also draw on screen turned out be an challenge kept me busy for weeks source is here https hectorcorrea com downloads datastructures zip version uses generics so it can used with any type that implements icomparable interface as indicated wikipedia http en org wiki which each node has at most two children implement created classes binarytreenode binarytree former represent while later organize nodes following rules addition third class binarytreedrawer algorithm actually let you see how information organized word caution although production environments structures are optimize access am providing were not implemented performance optimization mind these meant showcase internally allow people them demo allows values looks graphically example below graphical representation generates when added 100 50 150 25 75 12 40 60 90 image images binarytree2 png random look hundreds click binarytree200nodes if want 200 180 kb luck ll post updated next will include find delete real goal b kings lot confuse stay tuned download related posts drawing ruby blog 13 2011 coffeescript 3 2012"
		},
		{
			"id": "/blog/2006-05-08/book-review-lean-software-development",
			"name": "Book review: Lean Software Development",
			"text": "book review lean software development a couple of weeks ago i finished reading http www amazon com exec obidos isbn 0321150783 by mary and tom poppendieck what great little in this present several tools for their term agile plus an excellent background on why these types methods work has theory practice manufacturing processes she describes how were are successfully applied companies like toyota 3m am usually disappointed when people try to compare other industries e g construction buildings because most the times they don t have any field make unfounded simplifications hand real life experience can between two with realistic examples authors describe 7 principles rational apply them eliminate waste amplify learning decide as late possible deliver fast empower team build integrity see whole is probably well known our industry come accept it good think some concepts deciding typically not understood managers developers be seen incompatible means that we need premature decisions about should keep options open allow us only enough information system example let s say roll out version 1 0 sure if support undo specific feature instead guessing locking ourselves into decision expensive one action then evaluate once users use might find actually needed but way had anticipated so solution ahead time wait until know problem key able must capacity change unit testing test driven ways account addition provide 22 thinking seeing value stream mapping feedback iterations synchronization set based queue 14 others although large part material presented found books project management scrum 073561993x ken schwaber iterative 0131111558 craig larman includes comparison hard motivation behind each principle from point view exclusive makes guide involved projects without business owners"
		}];